<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <!-- internal page type: feed,xml -->
  <title>Feed for Fight With Tools - Aram&#39;s Dev Blog</title>
  <subtitle>Notes on various projects</subtitle>
  <link href="https://fightwithtools.dev/feed.xml" rel="self"/>
  <link href="https://fightwithtools.dev/"/>
  <updated>2021-08-01T02:59:43Z</updated>
  <id>https://fightwithtools.dev/</id>
  <author>
    <name>Aram Zucker-Scharff</name>
    <email>aramdevblog@aramzs.me</email>
  </author>
  
  <entry>
    <title>Hello World Devblog - Pt. 1</title>
    <link href="https://fightwithtools.dev/posts/projects/devblog/hello-day-1/"/>
    <updated>2021-06-13T03:59:43Z</updated>
    <id>https://fightwithtools.dev/posts/projects/devblog/hello-day-1/</id>
    <content type="html">&lt;h1 id=&quot;Day-1&quot; tabindex=&quot;-1&quot;&gt;Day 1&lt;/h1&gt;
&lt;p&gt;I have decided I want a blog to write down some of my decisions as I build various public projects. So, inital requirements:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Static Site Generator that can build the blog and let me host it on Github Pages&lt;/li&gt;
&lt;li&gt;I want to write posts in Markdown because I&#39;m lazy, it&#39;s easy, and it is how I take notes now.&lt;/li&gt;
&lt;li&gt;I don&#39;t want to spend a ton of time doing design work. I&#39;m doing complicated designs for other projects, so I want to pull a theme I like that I can rely on someone else to keep up.&lt;/li&gt;
&lt;li&gt;Once it gets going, I want template changes to be easy.&lt;/li&gt;
&lt;li&gt;It should be as easy as Jekyll, so I need to be able to build it using GitHub Actions, where I can just commit a template change or Markdown file and away it goes. If I can&#39;t figure this out than fk it, just use Jekyll.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;So, after being completly put off by the Hugo quickstart page, I decided to go to 11ty. I&#39;d been using 11ty for a very basic build process on another project, so I wanted to see what it would be like for a more complex blog. Everyone I know seems to love 11ty so if I complain about it on Twitter someone will likely give me an answer. This is a requirement I only just realized:&lt;/p&gt;
&lt;ol start=&quot;6&quot;&gt;
&lt;li&gt;I require it to be used by a significant percent of my professional peers so I can get easy answers when something goes wrong.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Ok. 11ty it is.&lt;/p&gt;
&lt;p&gt;Ok, first things first. New folder. &lt;code&gt;git init&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Oh, it starts new projects with the &lt;code&gt;master&lt;/code&gt; branch? I don&#39;t like that, I like using &lt;code&gt;main&lt;/code&gt;. I can checkout main and delete master right?&lt;/p&gt;
&lt;p&gt;Huh... if you don&#39;t have anything committed to any branch and you checkout a new branch the &lt;code&gt;master&lt;/code&gt; branch ceases to exist. Cool. I guess I don&#39;t need to do &lt;a href=&quot;https://www.git-tower.com/learn/git/faq/git-rename-master-to-main/&quot; target=&quot;_blank&quot;&gt;this&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Wait... does 11ty work with GitHub Actions to build? I have no idea. &lt;a href=&quot;https://www.linkedin.com/pulse/eleventy-github-pages-lea-tortay/&quot; target=&quot;_blank&quot;&gt;Looks like yes&lt;/a&gt;... let&#39;s move forward.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;npm init -y&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;npm install --save-dev @11ty/eleventy&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Here we go with 11ty! Only...&lt;/p&gt;
&lt;p&gt;All the pre-built... ughhh &amp;quot;Themes&amp;quot; or &amp;quot;Starters&amp;quot; (I can&#39;t say template here, because searching for &amp;quot;11ty templates&amp;quot;, while a logical thing to do, just gives me a ton of pages about using Nunjucks) suck. They all suck hardcore. I mean, they&#39;re all single page sites with no clear navigation or nav bar and look barely worked out beyond the Bootstrap Starter Template phase. I can&#39;t stand any of them. Is there a secret location for good 11ty themes or is it just that the type of folks most likely to use 11ty lack design skills?&lt;/p&gt;
&lt;p&gt;But... I really like the Jekyll dinky theme. All I really need is the CSS and I can pull a copy of its template into whatever. Easy enough in theory (never in practice).&lt;/p&gt;
&lt;p&gt;I&#39;m going to pull it in as a submodule. I forgot how to do submodules. &lt;a href=&quot;https://github.blog/2016-02-01-working-with-submodules/&quot; target=&quot;_blank&quot;&gt;Here we go&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git submodule add git@github.com:pages-themes/dinky.git&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git submodule update --init --recursive&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Alright, what have we got here.&lt;/p&gt;
&lt;p&gt;Sass. We&#39;ve got Sass. That&#39;s going to need to be figured out.&lt;/p&gt;
&lt;p&gt;Let&#39;s go to the 11ty plugins and see what, if anything, can help me here.&lt;/p&gt;
&lt;p&gt;Oh and let&#39;s grab some cool looking ones.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;npm install @11ty/eleventy-img&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Huh, some funkyness on the install... because I forgot that, for various complicated reasons, my Node install defaults to 8.*.&lt;/p&gt;
&lt;p&gt;Ok. Create the &lt;code&gt;.nvmrc&lt;/code&gt; file and what&#39;s the latest version of node these days? Put &lt;code&gt;16&lt;/code&gt; in it.&lt;/p&gt;
&lt;p&gt;Reboot my console so I take advantage of &lt;a href=&quot;https://gist.github.com/AramZS/fda9c04a38908789dccdf78bb94e2b45&quot; target=&quot;_blank&quot;&gt;the nifty nvm auto-load ZSH script&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Dump package-lock, dump node_modules, &lt;code&gt;npm install&lt;/code&gt; again.&lt;/p&gt;
&lt;p&gt;Plugin install works now.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;npm install @11ty/eleventy-plugin-syntaxhighlight --save-dev&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;npm install @11ty/eleventy-navigation --save-dev&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;npm install @11ty/eleventy-plugin-rss --save-dev&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;npm install eleventy-plugin-sass --save &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Ok, that didn&#39;t work. And the whole point of looking at plugins was a SASS processor integrated into the 11ty build process. Not great. What&#39;s wrong?&lt;/p&gt;
&lt;p&gt;Looks like something with &lt;code&gt;node-gyp&lt;/code&gt;. Frequently a problem.&lt;/p&gt;
&lt;p&gt;Let&#39;s check &lt;code&gt;node-gyp&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Ok, a whole thing for problems from an upgrade.&lt;/p&gt;
&lt;p&gt;Let&#39;s do all of &lt;a href=&quot;https://github.com/nodejs/node-gyp/blob/master/macOS_Catalina.md&quot; target=&quot;_blank&quot;&gt;that&lt;/a&gt;. XCode needed an update and for some reason updating to Catalina also wiped out my XCode CLI tools... didn&#39;t realize that. Reinstall those:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;xcode-select --install&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Ok, cool. Moving on...&lt;/p&gt;
&lt;p&gt;Oh, I am looking at the configuration options for &lt;code&gt;gulp-sass&lt;/code&gt; which get passed into the 11ty plugin and looks like &lt;code&gt;gulp-sass&lt;/code&gt; is depreciated. So this plugin is not one I want to use. And it looks like there isn&#39;t an up to date Sass plugin.&lt;/p&gt;
&lt;p&gt;lol.&lt;/p&gt;
&lt;p&gt;So, let&#39;s assume I&#39;m going to have to write my own plugin. I know nothing about 11ty plugins. Find a real basic one and use that as the template to start a new one.&lt;/p&gt;
&lt;p&gt;This &lt;a href=&quot;https://www.npmjs.com/package/eleventy-plugin-meta-generator&quot; target=&quot;_blank&quot;&gt;one&lt;/a&gt; looks pretty simple! So I&#39;m going to keep that tab open for reference as I build out a Sass processor.&lt;/p&gt;
&lt;p&gt;[ ] Also &lt;a href=&quot;https://www.npmjs.com/package/@quasibit/eleventy-plugin-sitemap&quot; target=&quot;_blank&quot;&gt;the sitemap plugin&lt;/a&gt; looks cool. Should grab that later.&lt;/p&gt;
&lt;p&gt;[ ] So does the &lt;a href=&quot;https://www.npmjs.com/package/eleventy-plugin-reading-time&quot; target=&quot;_blank&quot;&gt;reading time one&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I also saw &lt;a href=&quot;https://www.npmjs.com/package/eleventy-load&quot; target=&quot;_blank&quot;&gt;a Loader plugin&lt;/a&gt;... but it looks way more complicated than I need while also &lt;em&gt;not doing what I need&lt;/em&gt;, so mark it, move on. Might have something in its code that&#39;s useful for later.&lt;/p&gt;
&lt;p&gt;[ ] Also &lt;a href=&quot;https://github.com/jdsteinbach/eleventy-plugin-toc/blob/master/src/BuildTOC.js&quot; target=&quot;_blank&quot;&gt;this TOC plugin&lt;/a&gt; mby?&lt;/p&gt;
&lt;p&gt;Ok, back to Sass. Now, I don&#39;t want to fk around with building a whole NPM module for this right now, so let&#39;s start with the plugin internal to the project.&lt;/p&gt;
&lt;p&gt;There does not seem to be a standard pattern for these like there is for layouts, data, etc... so I&#39;m going to imitate the &lt;code&gt;_{thing}&lt;/code&gt; pattern and make a &lt;code&gt;_custom-plugins&lt;/code&gt; folder. Maybe someday someone will read this and tell me this is a dumb pattern. Put it in there. Node module structure, &lt;code&gt;index.js&lt;/code&gt; at the base, &lt;code&gt;src&lt;/code&gt; folder with the files that actually do stuff.&lt;/p&gt;
&lt;p&gt;Ok let&#39;s get Sass in here. I want the Javascript library, so read through docs &lt;a href=&quot;https://sass-lang.com/dart-sass&quot; target=&quot;_blank&quot;&gt;at their site&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;npm install sass --save-dev&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;npm install fiber --save-dev&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;That 2nd one didn&#39;t work... cool, what is Fiber... let&#39;s &lt;a href=&quot;https://github.com/laverdet/node-fibers&quot; target=&quot;_blank&quot;&gt;read about it&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Update [April 13th, 2021] -- Fibers is not compatible with nodejs v16.0.0 or later. Unfortunately, v8 commit dacc2fee0f is a breaking change and workarounds are non-trivial.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;sigh&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Ok, using latest version of Node, clearly a bad choice.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;.nvmrc&lt;/code&gt; changed to &lt;code&gt;15&lt;/code&gt;. I like 15, I&#39;ve used 15 for other stuff. Hopefully no problem.&lt;/p&gt;
&lt;p&gt;You know... reading node-fiber&#39;s documentation... I... don&#39;t actually need it anyway. I want &lt;code&gt;renderSync&lt;/code&gt;, to block the build process of 11ty until the right assets are done.&lt;/p&gt;
&lt;p&gt;Whatever... never use latest Node... it always causes problems. I have encountered this time and time again. Clear out package-lock and node_modules.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;npm install&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Ok at this point my process has already become more muddled then I&#39;m comfortable with. Better start documenting it actually. Oh wait, this is a dev blog, I should start documenting it AS A BLOG POST.&lt;/p&gt;
&lt;p&gt;I forgot the pattern for 11ty posts&#39; folders in a project. &lt;a href=&quot;https://github.com/11ty/eleventy-base-blog/tree/master/posts&quot; target=&quot;_blank&quot;&gt;Here it is&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Started this file.&lt;/p&gt;
&lt;p&gt;Forgot the number of dashes for the metadata format for markdown that 11ty likes because it is not 8:30pm and I have not yet had dinner. I was reading about some feature that mentioned it in the context of merging data from templates with markdown files, I should likely note that.&lt;/p&gt;
&lt;p&gt;[ ] Use &lt;a href=&quot;https://www.11ty.dev/docs/data-deep-merge/&quot; target=&quot;_blank&quot;&gt;Data Deep Merge&lt;/a&gt; in this blog.&lt;/p&gt;
&lt;p&gt;Ok now:&lt;/p&gt;
&lt;p&gt;[x] Write everything down that I&#39;ve done to this point before it zeroes out of my head.&lt;/p&gt;
&lt;p&gt;God bless CLI and browser history.&lt;/p&gt;
&lt;p&gt;Ok, back to the Sass plugin. And also: this would be a good time to do a commit huh?&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git commit -am &amp;quot;a real 11ty blog... I don&#39;t know wtf I&#39;m doing to make this work yet&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Ok, &lt;code&gt;dart-sass&lt;/code&gt;. I don&#39;t know what any of these listed options are...&lt;/p&gt;
&lt;p&gt;Annoying, since they are emulating the &lt;code&gt;node-sass&lt;/code&gt; API, it&#39;s just a link to the &lt;code&gt;node-sass&lt;/code&gt; README documentation. Ok, taking a look.&lt;/p&gt;
&lt;ol start=&quot;7&quot;&gt;
&lt;li&gt;I want source maps. This is a dev log site which means whatever I do with it should be easy for other developers to read.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I also would like to have smart CSS, where it only loads the CSS files it needs for a template, so we&#39;d have a main CSS file and then per-template CSS files? That would be cool. Or maybe &lt;a href=&quot;https://github.com/addyosmani/critical#usage&quot; target=&quot;_blank&quot;&gt;this thing&lt;/a&gt;? You know what... table that... let&#39;s just render the damn CSS first.&lt;/p&gt;
&lt;p&gt;[ ] Decide if I want to render the CSS fancier than just a base file.&lt;/p&gt;
&lt;p&gt;Huh... a thought... can I just run any arbitrary function in 11ty as part of the build?&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.11ty.dev/docs/data-js/&quot; target=&quot;_blank&quot;&gt;Looks like&lt;/a&gt; the &lt;code&gt;_data&lt;/code&gt; folder can contain functions that output arbitrary files?&lt;/p&gt;
&lt;p&gt;Should I do that? I mean... I likely could... but it isn&#39;t elegant, it isn&#39;t the &lt;em&gt;right&lt;/em&gt; way. Skip it.&lt;/p&gt;
&lt;p&gt;Ok, set it up with the most basic Sass build rules. Let&#39;s hold there, I&#39;m going to want to try it out, but first, let&#39;s make sure the normal 11ty build works.&lt;/p&gt;
&lt;p&gt;Ok, to do that I need a layout in place. Get it in &lt;a href=&quot;https://github.com/11ty/eleventy-base-blog/tree/master/_includes/layouts&quot; target=&quot;_blank&quot;&gt;the right place&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To make sure my CSS works properly, I should prob set up the dinky layout here. &lt;code&gt;dinky/_layouts&lt;/code&gt;. Ok... only one file, easy enough. And the template syntax looks basically identical. Copy it and paste it into the &lt;code&gt;_includes/layouts&lt;/code&gt; folder and rename it to &lt;code&gt;default.njk&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;NOTE: I&#39;m pretty sure that Nunjucks can process HTML files. Do I want to just add a 11ty alias to just pull default.html from dinky in the style of &lt;code&gt;eleventyConfig.addLayoutAlias(&amp;quot;base&amp;quot;, &amp;quot;dinky/_layouts/default.html&amp;quot;);&lt;/code&gt;? Would that work? Put a pin in that:&lt;/p&gt;
&lt;p&gt;[ ] Can I use the template inside of dinky that already exists instead of copy/pasting it?&lt;/p&gt;
&lt;p&gt;Pull the .eleventy.js return from the &lt;a href=&quot;https://github.com/11ty/eleventy-base-blog/blob/master/.eleventy.js&quot; target=&quot;_blank&quot;&gt;base blog&lt;/a&gt; and change output to &lt;code&gt;docs&lt;/code&gt; for Github Pages...&lt;/p&gt;
&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;		dir&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;			input&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;.&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;			includes&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;_includes&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;			data&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;_data&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;			output&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;docs&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;		&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Wait... it&#39;s pulling njk files from the base of the project? Mixing project files with build configuration files? That&#39;s HOT NONSENSE. I did that last time, but it was becaause I wanted to build some real basic pages and only a few of them. Not good for a larger project IMO. Create an &lt;code&gt;src&lt;/code&gt; folder.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;input: &amp;quot;src&amp;quot;,&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Crap... what of these folders do I need to move in? I guess &lt;code&gt;posts&lt;/code&gt;? That is likely it. I&#39;ll find out later!&lt;/p&gt;
&lt;p&gt;Ok, theoretically should be able to make a build. Moment of truth.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;npx @11ty/eleventy&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;It did not pick up the template&lt;/p&gt;
&lt;p&gt;Let&#39;s try altering the .eleventy.js returned data to include, and I&#39;ll move the folder accordingly:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;layouts: &amp;quot;_layouts&amp;quot;,&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Still didn&#39;t pick it up.&lt;/p&gt;
&lt;p&gt;Ok, gotta play around, but good time to commit&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git commit -am &amp;quot;First render, didn&#39;t work&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Time to take a break for dinner.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Hello World Devblog - Pt. 2</title>
    <link href="https://fightwithtools.dev/posts/projects/devblog/hello-day-2/"/>
    <updated>2021-06-14T03:59:43Z</updated>
    <id>https://fightwithtools.dev/posts/projects/devblog/hello-day-2/</id>
    <content type="html">&lt;h1 id=&quot;Day-2&quot; tabindex=&quot;-1&quot;&gt;Day 2&lt;/h1&gt;
&lt;p&gt;Ok, day 2. Let&#39;s restate the requirements and todos!&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Static Site Generator that can build the blog and let me host it on Github Pages&lt;/li&gt;
&lt;li&gt;I want to write posts in Markdown because I&#39;m lazy, it&#39;s easy, and it is how I take notes now.&lt;/li&gt;
&lt;li&gt;I don&#39;t want to spend a ton of time doing design work. I&#39;m doing complicated designs for other projects, so I want to pull a theme I like that I can rely on someone else to keep up.&lt;/li&gt;
&lt;li&gt;Once it gets going, I want template changes to be easy.&lt;/li&gt;
&lt;li&gt;It should be as easy as Jekyll, so I need to be able to build it using GitHub Actions, where I can just commit a template change or Markdown file and away it goes. If I can&#39;t figure this out than fk it, just use Jekyll.&lt;/li&gt;
&lt;li&gt;I require it to be used by a significant percent of my professional peers so I can get easy answers when something goes wrong.&lt;/li&gt;
&lt;li&gt;I want source maps. This is a dev log site which means whatever I do with it should be easy for other developers to read.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;[ ] Also &lt;a href=&quot;https://www.npmjs.com/package/@quasibit/eleventy-plugin-sitemap&quot; target=&quot;_blank&quot;&gt;the sitemap plugin&lt;/a&gt; looks cool. Should grab that later.&lt;/p&gt;
&lt;p&gt;[ ] So does the &lt;a href=&quot;https://www.npmjs.com/package/eleventy-plugin-reading-time&quot; target=&quot;_blank&quot;&gt;reading time one&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;[ ] Also &lt;a href=&quot;https://github.com/jdsteinbach/eleventy-plugin-toc/blob/master/src/BuildTOC.js&quot; target=&quot;_blank&quot;&gt;this TOC plugin&lt;/a&gt; mby?&lt;/p&gt;
&lt;p&gt;[ ] Use &lt;a href=&quot;https://www.11ty.dev/docs/data-deep-merge/&quot; target=&quot;_blank&quot;&gt;Data Deep Merge&lt;/a&gt; in this blog.&lt;/p&gt;
&lt;p&gt;[ ] Decide if I want to render the CSS fancier than just a base file.&lt;/p&gt;
&lt;p&gt;[ ] Can I use the template inside of dinky that already exists instead of copy/pasting it?&lt;/p&gt;
&lt;p&gt;Ok, so why isn&#39;t it picking up the layout from either &lt;code&gt;_layouts/post.njk&lt;/code&gt; or &lt;code&gt;_layouts/default.njk&lt;/code&gt;? Maybe I need to define a default &lt;a href=&quot;https://www.11ty.dev/docs/data-template-dir/&quot; target=&quot;_blank&quot;&gt;at the data level&lt;/a&gt;? Or do I need to move it to &lt;code&gt;src&lt;/code&gt; even if I define the location in the returned configuration?&lt;/p&gt;
&lt;p&gt;Moving it into &lt;code&gt;src&lt;/code&gt; doesn&#39;t seem to do anything. But it looks like all the files I configure into 11ty in the returned object do need to be in there, so apparently I can&#39;t set a default layout in the &lt;code&gt;data&lt;/code&gt; folder?&lt;/p&gt;
&lt;p&gt;Adding a template to &lt;code&gt;src/posts/posts.json&lt;/code&gt;&lt;/p&gt;
&lt;pre class=&quot;language-json&quot;&gt;&lt;code class=&quot;language-json&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;token property&quot;&gt;&quot;layout&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;layouts/post.njk&quot;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ok, yay, an error!&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Error You’re trying to use a layout that does not exist layouts/post.njk (undefined)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Because I defined a path to layouts in the config, I don&#39;t need to include it?&lt;/p&gt;
&lt;pre class=&quot;language-json&quot;&gt;&lt;code class=&quot;language-json&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;token property&quot;&gt;&quot;layout&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;post.njk&quot;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Yup, now I have an error in the template!&lt;/p&gt;
&lt;p&gt;Ok, looks like I can&#39;t use this structure:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;{{ site.lang | default: &amp;quot;en-US&amp;quot; }}&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;So, default values, how should I do them? It &lt;a href=&quot;https://www.11ty.dev/docs/data-cascade/&quot; target=&quot;_blank&quot;&gt;looks like&lt;/a&gt; the answer is to define it as &lt;a href=&quot;https://www.11ty.dev/docs/data-global/&quot; target=&quot;_blank&quot;&gt;a data global&lt;/a&gt;. Ok let&#39;s try it, place the default in &lt;code&gt;src/_data/site.json&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&quot;language-json&quot;&gt;&lt;code class=&quot;language-json&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;	&lt;span class=&quot;token property&quot;&gt;&quot;lang&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;en-US&quot;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Huh... render error on &lt;em&gt;this&lt;/em&gt; file:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;TemplateContentRenderError ... expected variable end&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Going to remove &lt;code&gt;{% seo %}&lt;/code&gt; from the template. I assume it is a template fragment without looking it up but I&#39;m not prepared to figure it out. Still no solve. Good time to commit!&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git commit -am &amp;quot;Template still not working but getting closer&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Ok, let&#39;s start stripping out stuff from the template. The error indicates the problem is in my markdown, but that doesn&#39;t make sense, so simpler template. Ok, first, I want the dinky assets folder so it works properly in the template. There are &lt;a href=&quot;https://www.11ty.dev/docs/copy/#change-the-output-directory&quot; target=&quot;_blank&quot;&gt;more ways to configure the passthrough rules&lt;/a&gt; to make this work for me.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;eleventyConfig.addPassthroughCopy({ &amp;quot;dinky/assets&amp;quot;: &amp;quot;assets&amp;quot; });&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Ok, passthrough works! But the template still won&#39;t render. The error is still in my markdown! At &lt;code&gt;[Line 49, Column 67]&lt;/code&gt;. What is going on?! That line is empty, it doesn&#39;t have columns.&lt;/p&gt;
&lt;p&gt;Wait... the line number is likely being calculated after the metadata is removed from the head of the &lt;code&gt;md&lt;/code&gt; file. Ok... my metadata takes up 10 lines so it is really line &lt;em&gt;59&lt;/em&gt;. Oh! It&#39;s a code sample &lt;em&gt;from&lt;/em&gt; the template. It&#39;s trying to render an njk variable from the markdown file?! That&#39;s very dumb.&lt;/p&gt;
&lt;p&gt;To Google! &amp;quot;njk picking up code sample of njk code&amp;quot; &amp;gt; &lt;a href=&quot;https://github.com/11ty/eleventy/issues/791&quot; target=&quot;_blank&quot;&gt;result&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Raw tag huh? How does that work exactly? Oh... like &lt;a href=&quot;https://github.com/11ty/11ty-website/blob/master/src/docs/languages/nunjucks.md&quot; target=&quot;_blank&quot;&gt;this&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Ok, works both for blocks and inline, good!&lt;/p&gt;
&lt;p&gt;Ok, defaults for posts &lt;em&gt;have&lt;/em&gt; to be in the &lt;code&gt;posts&lt;/code&gt; folder&#39;s &lt;code&gt;posts.json&lt;/code&gt;. I cannot seem to set any defaults for posts in the &lt;code&gt;_data&lt;/code&gt; folder. Or at least I haven&#39;t figured out how. But ok, things are rendering now in the right template. Also the assets are being passed out of the &lt;code&gt;dinky&lt;/code&gt; submodule! This is good. The process works, so now I can start to build in my weirdness.&lt;/p&gt;
&lt;p&gt;I still really want to figure out the defaults thing first. How do I make this work?&lt;/p&gt;
&lt;p&gt;Ok, &lt;a href=&quot;https://github.com/11ty/eleventy/issues/380#issuecomment-568033456&quot; target=&quot;_blank&quot;&gt;here we go&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;So to get a default &lt;code&gt;description&lt;/code&gt; value in my template I can set it up with a file at &lt;code&gt;src/_data/description.js&lt;/code&gt; and have the content of that file be &lt;code&gt;module.exports = &amp;quot;Talking about code&amp;quot;;&lt;/code&gt;. Ok, that works!&lt;/p&gt;
&lt;p&gt;Yay, 11ty defaults work now! Good place to commit.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git commit -am &amp;quot;Ok, renders and defaults are working now&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Hmmm... ok I guess that I picked a bad example plugin, because the one I used &lt;a href=&quot;https://www.npmjs.com/package/eleventy-plugin-meta-generator#usage&quot; target=&quot;_blank&quot;&gt;doesn&#39;t have a typical footprint&lt;/a&gt;. Well, I&#39;m not going to have a typical footprint I guess. Let&#39;s start without that. It runs sync, so I can just call the function during setup mby? Just add &lt;code&gt;sassBuild();&lt;/code&gt; to the inside of my .eleventy.js function inside of &lt;code&gt;module.exports = function (eleventyConfig) {&lt;/code&gt;?&lt;/p&gt;
&lt;p&gt;Ok... renderSync from &lt;code&gt;dart-sass&lt;/code&gt; threw an error:&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;Receiver: Closure &lt;span class=&quot;token string&quot;&gt;&#39;_renderSync&#39;&lt;/span&gt;&lt;br /&gt;Arguments: &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;Instance of &lt;span class=&quot;token string&quot;&gt;&#39;PlainJavaScriptObject&#39;&lt;/span&gt;, Instance of &lt;span class=&quot;token string&quot;&gt;&#39;JavaScriptFunction&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;`` was thrown:&lt;br /&gt;    NoSuchMethodError: method not found: &lt;span class=&quot;token string&quot;&gt;&#39;call&#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Lol &lt;a href=&quot;https://github.com/sass/dart-sass/issues/23#issuecomment-259011350&quot; target=&quot;_blank&quot;&gt;documentation error in dart-sass&lt;/a&gt; apparently. Don&#39;t pass two functions, because that&#39;s an async pattern, instead return the result.&lt;/p&gt;
&lt;p&gt;Cool. New error!&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Invalid argument(s): Either options.data or options.file must be set.&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Can I not use multiple files? I guess I need a single file that calls the others &lt;a href=&quot;https://sass-lang.com/documentation/at-rules/use&quot; target=&quot;_blank&quot;&gt;using @use&lt;/a&gt;. Last time I used Sass it was @import, but according to docs, that method is out now. Good to know!&lt;/p&gt;
&lt;p&gt;Oh, gotta remember paths are relative to execution, so I have to set up paths in both the Sass plugin AND the &lt;code&gt;@use&lt;/code&gt; relative to the base of the project, where I&#39;m executing the 11ty build process.&lt;/p&gt;
&lt;p&gt;Still no css file.&lt;/p&gt;
&lt;p&gt;Oh, &lt;a href=&quot;https://sass-lang.com/documentation/js-api#outfile&quot; target=&quot;_blank&quot;&gt;lol&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Despite the name, Sass does not write the CSS output to this file. The caller must do that themselves.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Ok, gotta do that.&lt;/p&gt;
&lt;p&gt;Ok, I want to use &lt;code&gt;fs&lt;/code&gt; to write the resulting file into &lt;code&gt;docs/styles/styles.css&lt;/code&gt;. Only, the &lt;code&gt;styles&lt;/code&gt; directory does not predictably exist so &lt;code&gt;fs&lt;/code&gt; fails because I have to make that folder. Of course, forgot. Easy enough.&lt;/p&gt;
&lt;p&gt;Ok, it works! This is a good place to stop because it is almost midnight.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git commit -am &amp;quot;Compile that sass&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;And this is pretty far along, huh? Time to push it to Github.&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Hello World Devblog - Pt. 3</title>
    <link href="https://fightwithtools.dev/posts/projects/devblog/hello-day-3/"/>
    <updated>2021-06-15T03:59:43Z</updated>
    <id>https://fightwithtools.dev/posts/projects/devblog/hello-day-3/</id>
    <content type="html">&lt;ol&gt;
&lt;li&gt;Static Site Generator that can build the blog and let me host it on Github Pages&lt;/li&gt;
&lt;li&gt;I want to write posts in Markdown because I&#39;m lazy, it&#39;s easy, and it is how I take notes now.&lt;/li&gt;
&lt;li&gt;I don&#39;t want to spend a ton of time doing design work. I&#39;m doing complicated designs for other projects, so I want to pull a theme I like that I can rely on someone else to keep up.&lt;/li&gt;
&lt;li&gt;Once it gets going, I want template changes to be easy.&lt;/li&gt;
&lt;li&gt;It should be as easy as Jekyll, so I need to be able to build it using GitHub Actions, where I can just commit a template change or Markdown file and away it goes. If I can&#39;t figure this out than fk it, just use Jekyll.&lt;/li&gt;
&lt;li&gt;I require it to be used by a significant percent of my professional peers so I can get easy answers when something goes wrong.&lt;/li&gt;
&lt;li&gt;I want source maps. This is a dev log site which means whatever I do with it should be easy for other developers to read.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;[ ] Also &lt;a href=&quot;https://www.npmjs.com/package/@quasibit/eleventy-plugin-sitemap&quot; target=&quot;_blank&quot;&gt;the sitemap plugin&lt;/a&gt; looks cool. Should grab that later.&lt;/p&gt;
&lt;p&gt;[ ] So does the &lt;a href=&quot;https://www.npmjs.com/package/eleventy-plugin-reading-time&quot; target=&quot;_blank&quot;&gt;reading time one&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;[ ] Also &lt;a href=&quot;https://github.com/jdsteinbach/eleventy-plugin-toc/blob/master/src/BuildTOC.js&quot; target=&quot;_blank&quot;&gt;this TOC plugin&lt;/a&gt; mby?&lt;/p&gt;
&lt;p&gt;[ ] Use &lt;a href=&quot;https://www.11ty.dev/docs/data-deep-merge/&quot; target=&quot;_blank&quot;&gt;Data Deep Merge&lt;/a&gt; in this blog.&lt;/p&gt;
&lt;p&gt;[ ] Decide if I want to render the CSS fancier than just a base file and do per-template splitting.&lt;/p&gt;
&lt;p&gt;[ ] Can I use the template inside of dinky that already exists instead of copy/pasting it?&lt;/p&gt;
&lt;h2 id=&quot;Day-3&quot; tabindex=&quot;-1&quot;&gt;Day 3&lt;/h2&gt;
&lt;p&gt;Ok, so I&#39;m at day 3 and everything is working at a basic level. I need an index/entry page and some ways to present posts in lists. I also am not a huge fan of the &lt;code&gt;site/posts/post-name&lt;/code&gt; structure.&lt;/p&gt;
&lt;p&gt;[ ] Is there a way to have permalinks to posts contain metadata without organizing them into subfolders?&lt;/p&gt;
&lt;p&gt;There&#39;s also an open question of Why Nunjucks? I&#39;m not the biggest fan of Nunjucks, outside of the 11ty community that seems to be heavily invested into it, not many people seem to be using it. Documentation is (as we&#39;ve already seen) sorta iffy and its relatively low adoption makes it harder to get questions answered.&lt;/p&gt;
&lt;p&gt;I also haven&#39;t quite gotten syntax highlighting to work for &lt;code&gt;njk&lt;/code&gt; files in VS Code, which is &lt;em&gt;very&lt;/em&gt; frustrating and often turns me off from using something.&lt;/p&gt;
&lt;p&gt;I could, at this point, switch to Mustache, which I&#39;m &lt;a href=&quot;https://glitch.com/edit/#!/thespin?path=server.js&quot; target=&quot;_blank&quot;&gt;already pretty familiar&lt;/a&gt; with. Mustache also has the advantage of having template tags that are more similar to Jekyll and more familiar to Javascript users. But, unless I hit a real bad obstacle I don&#39;t think I will, for two reasons. First, the point of this is to learn something new! Second, when I last tried 11ty to basically generate a few quick pages from a common template, it had terrible trouble rendering with Mustache, even with the instructions from their site. I&#39;ve got other things to complicate first, can save that for later. If I get everything working, I might come back to this issue.&lt;/p&gt;
&lt;p&gt;Ok, &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=ronnidc.nunjucks&quot; target=&quot;_blank&quot;&gt;got Nunjucks syntax highlighting to properly work&lt;/a&gt; for now!&lt;/p&gt;
&lt;p&gt;Stepping back it looks like the rendered site in the &lt;code&gt;docs&lt;/code&gt; folder is generally looking ok. There&#39;s one issue, my passthrough of assets includes an &lt;code&gt;assets/css&lt;/code&gt; folder with an entirely useless sass file that would be public-facing. So I&#39;m going to have to do subdirectories of assets instead. Should be easy enough.&lt;/p&gt;
&lt;p&gt;Huh... it doesn&#39;t clean up the now defunct &lt;code&gt;css&lt;/code&gt; folder. Is there a build tool to clean things up?&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/11ty/eleventy/issues/19&quot; target=&quot;_blank&quot;&gt;Looks like it doesn&#39;t ship with 11ty&lt;/a&gt;. But there &lt;a href=&quot;https://github.com/11ty/eleventy/issues/744&quot; target=&quot;_blank&quot;&gt;are other solutions that people have done&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I like &lt;a href=&quot;https://github.com/11ty/eleventy/issues/744#issuecomment-800323968&quot; target=&quot;_blank&quot;&gt;the solution that defines the site configuration earlier&lt;/a&gt;, it seems generally useful. I&#39;ll give it a try.&lt;/p&gt;
&lt;p&gt;That works! Deleting the whole folder and building it all new seems super inefficient, but there doesn&#39;t seem to be another way to handle things.&lt;/p&gt;
&lt;p&gt;One other throught now occurs. I saw that the dinky template uses some sort of build version number passed by github on build to cachebreak. I&#39;m not sure how that works or if it can work the same way for 11ty. Perhaps I need to pass a datetime stamp for each build instead? Something to figure out later.&lt;/p&gt;
&lt;p&gt;[ ] How do I cachebreak files on the basis of new build events? Datetime? &lt;code&gt;site.github.build_revision&lt;/code&gt; is how Jekyll accomplishes this, but is there a way to push that into the build process for 11ty?&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git commit -am &amp;quot;Self-cleaning builds&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;11ty build is now stable enough that I might be able to develop with &lt;code&gt;npx @11ty/eleventy --serve&lt;/code&gt; and check in on it. Let&#39;s see what it looks like.&lt;/p&gt;
&lt;p&gt;Gotta adjust my CSS output path to match the template file&#39;s.&lt;/p&gt;
&lt;p&gt;Ok, content is rendering as escaped HTML. That&#39;s not right at all.&lt;/p&gt;
&lt;p&gt;Ahhh, apparently (here we are at poorly documented Nunjucks again...) my content tag needs to be &lt;code&gt;{{ content | safe }}&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Ok, it&#39;s working now! Good signs! Hmmm. I was hoping that 1-space empty brackets would be rendered as a checkbox, as in Github-flavored markdown. But apparently not. How difficult would that be to fix?&lt;/p&gt;
&lt;p&gt;Hmmm also some other problems:&lt;/p&gt;
&lt;p&gt;[ ] Make link text look less shitty. It looks like it is a whole, lighter, font.&lt;br /&gt;
[ ] Code blocks do not have good syntax highlighting. I want good syntax highlighting.&lt;/p&gt;
&lt;p&gt;I &lt;a href=&quot;https://github.com/AramZS/aramzs.github.io/blob/master/_sass/_syntax-highlighting.scss&quot; target=&quot;_blank&quot;&gt;have syntax highlighting styles&lt;/a&gt; I like on my Github user Pages site. Let&#39;s just reuse it.&lt;/p&gt;
&lt;p&gt;Huh... why doesn&#39;t the plugin for building Sass re-trigger on watch? &lt;a href=&quot;https://www.11ty.dev/docs/events/#beforewatch&quot; target=&quot;_blank&quot;&gt;Looks like there&#39;s a way to fix that&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Ugh... apparently the Sass syntax has changed significantly since the last time I used it and also since it was set up in my other site. I&#39;ll need to correct.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;sigh&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Ok &lt;a href=&quot;https://stackoverflow.com/questions/56858150/i-am-gettiing-an-error-expected-new-line-while-compiling-sass&quot; target=&quot;_blank&quot;&gt;it&#39;s changed a lot&lt;/a&gt;. And the Sass build tools are dickishly specific about spaces over tabs. Need to add a new section to my &lt;code&gt;.editorconfig&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
[*.sass]
indent_style = space

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ok, I tried building the extendable &lt;a href=&quot;https://sass-lang.com/documentation/style-rules/placeholder-selectors&quot; target=&quot;_blank&quot;&gt;placeholder&lt;/a&gt; into a standalone Sass file and a standalone Scss file and &lt;a href=&quot;https://sass-lang.com/documentation/at-rules/extend#placeholder-selectors&quot; target=&quot;_blank&quot;&gt;it looks right&lt;/a&gt;. But &lt;code&gt;@extend %vertical-rhythm&lt;/code&gt; still isn&#39;t working.&lt;/p&gt;
&lt;p&gt;My ordering looks correct!&lt;/p&gt;
&lt;pre class=&quot;language-sass&quot;&gt;&lt;code class=&quot;language-sass&quot;&gt;&lt;span class=&quot;token atrule-line&quot;&gt;&lt;span class=&quot;token atrule&quot;&gt;@use&lt;/span&gt; &#39;_sass/base-syntax-highlighting&#39;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token atrule-line&quot;&gt;&lt;span class=&quot;token atrule&quot;&gt;@use&lt;/span&gt; &#39;_sass/syntax-highlighting&#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;What&#39;s going on?&lt;/p&gt;
&lt;p&gt;First error is a depreciation error. It &lt;em&gt;shouldn&#39;t&lt;/em&gt; be a problem, but let&#39;s just get rid of it.&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;DEPRECATION WARNING: Using / &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; division is deprecated and will be removed &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; Dart Sass &lt;span class=&quot;token number&quot;&gt;2.0&lt;/span&gt;.0.&lt;br /&gt;&lt;br /&gt;Recommendation: math.div&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token variable&quot;&gt;$spacing&lt;/span&gt;-unit, &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;More info and automated migrator: https://sass-lang.com/d/slash-div&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Alrighty. &lt;a href=&quot;https://sass-lang.com/documentation/breaking-changes/slash-div&quot; target=&quot;_blank&quot;&gt;Go to the docs and do what it says&lt;/a&gt;. Side comment... this is dumb. Why is it &lt;em&gt;easier&lt;/em&gt; to do this type of math with standard CSS (where it would be &lt;code&gt;calc()&lt;/code&gt;) than it is with Sass. Why is Sass harder to use now than it was when I got deep into it years ago? Grrrrr.&lt;/p&gt;
&lt;p&gt;OMG why does this documentation start off with &lt;code&gt;// Future Sass, doesn&#39;t work yet!&lt;/code&gt;?!?! Why would you start off a documentation file with a suggested solution that &lt;strong&gt;doesn&#39;t work&lt;/strong&gt;?!&lt;/p&gt;
&lt;p&gt;Ok. Down to one error. Still not importing the placeholder, why not?&lt;/p&gt;
&lt;p&gt;Oh no. This is &lt;a href=&quot;https://github.com/sass/dart-sass/issues/1042#issuecomment-656338728&quot; target=&quot;_blank&quot;&gt;A Problem&lt;/a&gt;. Apparently the move to @use has not synced well with the old ways of using mixins, imports and placeholders?&lt;/p&gt;
&lt;p&gt;The answer seems to be that you can&#39;t have a master file import a variables and expect them to be picked up by downstream files &lt;code&gt;@use&lt;/code&gt;ed by that master file, instead you have to import them directly into the file you inted to use? I could have sworn that worked differently before? That isn&#39;t how it seems to work in my Jekyll site, perhaps there is a better way to do this?&lt;/p&gt;
&lt;p&gt;[ ] Why is the logic around &lt;code&gt;@use&lt;/code&gt; not working how I expect it to? Is there a better way?&lt;/p&gt;
&lt;p&gt;Ok, I&#39;m... not sure the styles are applying. Let&#39;s replicate a markdown block from my other site and see if it looks good.&lt;/p&gt;
&lt;pre class=&quot;language-markdown&quot;&gt;&lt;code class=&quot;language-markdown&quot;&gt;&lt;span class=&quot;token frontmatter&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;---&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token key atrule&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; page&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;---&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It doesn&#39;t look good, but looking at the HTML markup... it looks like the problem is 11ty&#39;s processing and output of the actual markup.&lt;/p&gt;
&lt;p&gt;:/&lt;/p&gt;
&lt;p&gt;What does Jekyll use?&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Confusingly, GitHub Pages renders Markdown differently than GitHub does. GitHub uses its own Markdown processor; GitHub Pages uses jekyll-commonmark.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;lol &lt;a href=&quot;https://www.markdownguide.org/tools/github-pages/&quot; target=&quot;_blank&quot;&gt;thanks&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Looks like &lt;a href=&quot;https://www.npmjs.com/package/markdown-it&quot; target=&quot;_blank&quot;&gt;Markdown-It&lt;/a&gt; is &lt;a href=&quot;https://www.11ty.dev/docs/languages/markdown/&quot; target=&quot;_blank&quot;&gt;a popular choice&lt;/a&gt; on 11ty to switch to commonmark.&lt;/p&gt;
&lt;p&gt;Oh no, &lt;a href=&quot;https://www.npmjs.com/package/markdown-it#syntax-highlighting&quot; target=&quot;_blank&quot;&gt;it doesn&#39;t ship with syntax highlighting&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Ok, &lt;code&gt;highlight.js&lt;/code&gt; is still not applying good tags. Is it an 11ty issue, or is it that I need to use Pygments, which is apparently the code syntax highlighting engine that Github Pages uses? Ok, how does that work in Node? There &lt;a href=&quot;https://www.npmjs.com/package/pygments&quot; target=&quot;_blank&quot;&gt;is a package, let&#39;s read up&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;I am concerned that it hasn&#39;t been update in 5 years. You know what? let&#39;s try &lt;a href=&quot;https://highlightjs.org/&quot; target=&quot;_blank&quot;&gt;https://highlightjs.org/&lt;/a&gt; and see if I can force it to build better styles.&lt;/p&gt;
&lt;p&gt;Oh no... white text on bright red background. This is a bad sign.&lt;/p&gt;
&lt;p&gt;Ok, this looks like it actually should work ok though, what is going on? I&#39;m going to add some &lt;code&gt;console.log&lt;/code&gt; statements.&lt;/p&gt;
&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;	&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; options &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;		html&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;		breaks&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;		linkify&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;		langPrefix&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;language-&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;		&lt;span class=&quot;token function-variable function&quot;&gt;highlight&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;str&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; lang&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;			&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;lang &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; hljs&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getLanguage&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;lang&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;				&lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;					console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Syntax highlight good&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; lang&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;					&lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; hljs&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;highlight&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;lang&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; str&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;value&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;				&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;__&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;					console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Syntax highlight fail&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; lang&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;				&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;			&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;			&lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// use external default escaping&lt;/span&gt;&lt;br /&gt;		&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;	eleventyConfig&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;setLibrary&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;md&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;markdownIt&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;options&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;	eleventyConfig&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;setLibrary&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;markdown&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;markdownIt&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;options&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ok, they aren&#39;t triggering. No logging, this isn&#39;t working.&lt;/p&gt;
&lt;p&gt;The eleventy website has good syntax highlighting. &lt;a href=&quot;https://github.com/11ty/11ty-website/blob/master/.eleventy.js&quot; target=&quot;_blank&quot;&gt;How are they doing it&lt;/a&gt;?&lt;/p&gt;
&lt;p&gt;Ok, there&#39;s a lot going on there and I need a break. Break time.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git commit -am &amp;quot;Trying to get better syntax highlighting&amp;quot; &lt;/code&gt;&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Hello World Devblog - Pt. 4</title>
    <link href="https://fightwithtools.dev/posts/projects/devblog/hello-day-4/"/>
    <updated>2021-06-16T03:59:43Z</updated>
    <id>https://fightwithtools.dev/posts/projects/devblog/hello-day-4/</id>
    <content type="html">&lt;ol&gt;
&lt;li&gt;Static Site Generator that can build the blog and let me host it on Github Pages&lt;/li&gt;
&lt;li&gt;I want to write posts in Markdown because I&#39;m lazy, it&#39;s easy, and it is how I take notes now.&lt;/li&gt;
&lt;li&gt;I don&#39;t want to spend a ton of time doing design work. I&#39;m doing complicated designs for other projects, so I want to pull a theme I like that I can rely on someone else to keep up.&lt;/li&gt;
&lt;li&gt;Once it gets going, I want template changes to be easy.&lt;/li&gt;
&lt;li&gt;It should be as easy as Jekyll, so I need to be able to build it using GitHub Actions, where I can just commit a template change or Markdown file and away it goes. If I can&#39;t figure this out than fk it, just use Jekyll.&lt;/li&gt;
&lt;li&gt;I require it to be used by a significant percent of my professional peers so I can get easy answers when something goes wrong.&lt;/li&gt;
&lt;li&gt;I want source maps. This is a dev log site which means whatever I do with it should be easy for other developers to read.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;[ ] Also &lt;a href=&quot;https://www.npmjs.com/package/@quasibit/eleventy-plugin-sitemap&quot; target=&quot;_blank&quot;&gt;the sitemap plugin&lt;/a&gt; looks cool. Should grab that later.&lt;/p&gt;
&lt;p&gt;[ ] So does the &lt;a href=&quot;https://www.npmjs.com/package/eleventy-plugin-reading-time&quot; target=&quot;_blank&quot;&gt;reading time one&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;[ ] Also &lt;a href=&quot;https://github.com/jdsteinbach/eleventy-plugin-toc/blob/master/src/BuildTOC.js&quot; target=&quot;_blank&quot;&gt;this TOC plugin&lt;/a&gt; mby?&lt;/p&gt;
&lt;p&gt;[ ] Use &lt;a href=&quot;https://www.11ty.dev/docs/data-deep-merge/&quot; target=&quot;_blank&quot;&gt;Data Deep Merge&lt;/a&gt; in this blog.&lt;/p&gt;
&lt;p&gt;[ ] Decide if I want to render the CSS fancier than just a base file and do per-template splitting.&lt;/p&gt;
&lt;p&gt;[ ] Can I use the template inside of dinky that already exists instead of copy/pasting it?&lt;/p&gt;
&lt;p&gt;[ ] Is there a way to have permalinks to posts contain metadata without organizing them into subfolders?&lt;/p&gt;
&lt;p&gt;[ ] How do I cachebreak files on the basis of new build events? Datetime? &lt;code&gt;site.github.build_revision&lt;/code&gt; is how Jekyll accomplishes this, but is there a way to push that into the build process for 11ty?&lt;/p&gt;
&lt;p&gt;[ ] Make link text look less shitty. It looks like it is a whole, lighter, font.&lt;/p&gt;
&lt;p&gt;[ ] Code blocks do not have good syntax highlighting. I want good syntax highlighting.&lt;/p&gt;
&lt;h1 id=&quot;Day-4&quot; tabindex=&quot;-1&quot;&gt;Day 4&lt;/h1&gt;
&lt;p&gt;Ok, don&#39;t have a ton of time to work today, but I&#39;ve been thinking more about the shitty code blocks.&lt;/p&gt;
&lt;p&gt;The core of the problem is that I can&#39;t even apply styles the way I want because the code is not being broken down properly.&lt;/p&gt;
&lt;p&gt;Here&#39;s what I&#39;m getting:&lt;/p&gt;
&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;pre&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;language-markdown&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;	&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;code&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;language-markdown&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;		&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;span&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;token front-matter-block&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;		&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;span&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;token punctuation&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;---&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;span&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;br&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;		&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;span&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;token font-matter yaml language-yaml&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;layout: page&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;span&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;br&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;		&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;span&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;token punctuation&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;---&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;span&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;span&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;	&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;code&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;pre&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;What I want would look like this:&lt;/p&gt;
&lt;pre class=&quot;language-html&quot;&gt;&lt;code class=&quot;language-html&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;pre&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;	&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;code&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;language-markdown&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;data-lang&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;markdown&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;		&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;span&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;nn&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;---&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;span&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;		&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;span&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;na&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;layout&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;span&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;span&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;pi&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;:&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;span&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;span&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;s&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;post&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;span&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;		&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;span&lt;/span&gt; &lt;span class=&quot;token attr-name&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token attr-value&quot;&gt;&lt;span class=&quot;token punctuation attr-equals&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;nn&lt;span class=&quot;token punctuation&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;---&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;span&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;	&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;code&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token tag&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;/&lt;/span&gt;pre&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;See the greater level of styling detail available via the additional span tags?&lt;/p&gt;
&lt;p&gt;Ok. So, like I said, surely a lot of people are using 11ty to demo code. Why not take a step back?&lt;/p&gt;
&lt;p&gt;Instead of trying to get some increasingly complex markdown processor in play to do this, let&#39;s see if there is a code block plugin instead? If anyone uses it I bet 11ty&#39;s website does?&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/11ty/11ty-website/blob/master/.eleventy.js#L14&quot; target=&quot;_blank&quot;&gt;Yup&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.11ty.dev/docs/plugins/syntaxhighlight/&quot; target=&quot;_blank&quot;&gt;Reading the docs&lt;/a&gt;. Looks like it uses Prism, which I&#39;m also familiar with. I&#39;ll try to implement like the 11ty site does.&lt;/p&gt;
&lt;p&gt;Ok, that looks a LOT better! I&#39;ll have to walk through some examples to make sure it works.&lt;/p&gt;
&lt;p&gt;git commit -am &amp;quot;Syntax highlighting actually working now?&amp;quot;&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Hello World Devblog - Pt. 5</title>
    <link href="https://fightwithtools.dev/posts/projects/devblog/hello-day-5/"/>
    <updated>2021-06-17T03:59:43Z</updated>
    <id>https://fightwithtools.dev/posts/projects/devblog/hello-day-5/</id>
    <content type="html">&lt;ol&gt;
&lt;li&gt;Static Site Generator that can build the blog and let me host it on Github Pages&lt;/li&gt;
&lt;li&gt;I want to write posts in Markdown because I&#39;m lazy, it&#39;s easy, and it is how I take notes now.&lt;/li&gt;
&lt;li&gt;I don&#39;t want to spend a ton of time doing design work. I&#39;m doing complicated designs for other projects, so I want to pull a theme I like that I can rely on someone else to keep up.&lt;/li&gt;
&lt;li&gt;Once it gets going, I want template changes to be easy.&lt;/li&gt;
&lt;li&gt;It should be as easy as Jekyll, so I need to be able to build it using GitHub Actions, where I can just commit a template change or Markdown file and away it goes. If I can&#39;t figure this out than fk it, just use Jekyll.&lt;/li&gt;
&lt;li&gt;I require it to be used by a significant percent of my professional peers so I can get easy answers when something goes wrong.&lt;/li&gt;
&lt;li&gt;I want source maps. This is a dev log site which means whatever I do with it should be easy for other developers to read.&lt;/li&gt;
&lt;/ol&gt;
&lt;ul class=&quot;task-list&quot;&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Also &lt;a href=&quot;https://www.npmjs.com/package/@quasibit/eleventy-plugin-sitemap&quot; target=&quot;_blank&quot;&gt;the sitemap plugin&lt;/a&gt; looks cool. Should grab that later.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; So does the &lt;a href=&quot;https://www.npmjs.com/package/eleventy-plugin-reading-time&quot; target=&quot;_blank&quot;&gt;reading time one&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Also &lt;a href=&quot;https://github.com/jdsteinbach/eleventy-plugin-toc/blob/master/src/BuildTOC.js&quot; target=&quot;_blank&quot;&gt;this TOC plugin&lt;/a&gt; mby?&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Use &lt;a href=&quot;https://www.11ty.dev/docs/data-deep-merge/&quot; target=&quot;_blank&quot;&gt;Data Deep Merge&lt;/a&gt; in this blog.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Decide if I want to render the CSS fancier than just a base file and do per-template splitting.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;s&gt;
&lt;ul class=&quot;task-list&quot;&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Can I use the template inside of dinky that already exists instead of copy/pasting it?&lt;/li&gt;
&lt;/ul&gt;
&lt;/s&gt;
&lt;ul class=&quot;task-list&quot;&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Is there a way to have permalinks to posts contain metadata without organizing them into subfolders?&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; How do I cachebreak files on the basis of new build events? Datetime? &lt;code&gt;site.github.build_revision&lt;/code&gt; is how Jekyll accomplishes this, but is there a way to push that into the build process for 11ty?&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Make link text look less shitty. It looks like it is a whole, lighter, font.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; checked=&quot;true&quot; class=&quot;markdown-todo&quot; /&gt; Code blocks do not have good syntax highlighting. I want good syntax highlighting.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;Day-5&quot; tabindex=&quot;-1&quot;&gt;Day 5&lt;/h1&gt;
&lt;p&gt;Ok, yesterday I didn&#39;t have that much time to work, but today I&#39;m feeling as good as I can after having my main battery and a whole bunch of USB sticks, a Yubi key, and my main external Anker power battery robbed out of the back of a rental car in San Antonio yesterday.&lt;/p&gt;
&lt;p&gt;Good news, finally a check mark on my ever-expanding scope list. Some bad news for the task list as well, in that I&#39;m now 99% sure I can&#39;t just pull the template from the dinky submodule. I think there are just too significant a set of differences between Jekyll and Nunjucks. I could explore more similar templating languages, but getting better at Nunjucks is part of the point of all this, so I&#39;m going to dismiss that from my work scope for now.&lt;/p&gt;
&lt;p&gt;So, since it hasn&#39;t been a great 24hs IRL, let&#39;s see if I can harvest a few more easy wins.&lt;/p&gt;
&lt;p&gt;How do the GitHub variables work for cachebreaking? That seems like a potentially non-obvious but relatively easy win. A-searching we do go.&lt;/p&gt;
&lt;p&gt;Interesting to see someone &lt;a href=&quot;https://snook.ca/archives/servers/deploying-11ty-to-gh-pages&quot; target=&quot;_blank&quot;&gt;handling their build via Travis&lt;/a&gt;, good to remember.&lt;/p&gt;
&lt;p&gt;Ok, that was unexpected. No one seems to have asked this question? Maybe it just works? I guess I&#39;ll have to wait to deploy in order to see. Moving on to something entirely in my hands, let&#39;s make the links look less shitty.&lt;/p&gt;
&lt;p&gt;Let me show you the problem.&lt;/p&gt;
&lt;p&gt;Oh, wait, need to get the image folder working first...&lt;/p&gt;
&lt;p&gt;Ok, following the pattern of posts the &lt;code&gt;img&lt;/code&gt; folder should be inside of &lt;code&gt;src&lt;/code&gt;. Gotta fix the passthrough &lt;code&gt;eleventyConfig.addPassthroughCopy(&amp;quot;src/img&amp;quot;, &amp;quot;img&amp;quot;);&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Oh, I actually &lt;a href=&quot;https://www.11ty.dev/docs/copy/#how-passthrough-file-copy-handles-input-directories&quot; target=&quot;_blank&quot;&gt;don&#39;t need to be that explicit&lt;/a&gt;. &lt;code&gt;eleventyConfig.addPassthroughCopy(&amp;quot;src/img&amp;quot;, &amp;quot;img&amp;quot;);&lt;/code&gt; works just fine.&lt;/p&gt;
&lt;p&gt;Hmmm, I could do full URLs, but this is actually one of the things I hate about Jekyll.&lt;/p&gt;
&lt;p&gt;Ugh... &lt;a href=&quot;https://github.com/11ty/eleventy/issues/379&quot; target=&quot;_blank&quot;&gt;it looks like the general strategy in GitHub issues is to copy images to be relative to the folders of the associated posts&lt;/a&gt;. That&#39;s... meh. I dislike it intensely. What if I want to reuse the image? Now I have multiples. One image, one URL IMHO.&lt;/p&gt;
&lt;p&gt;Ok, looks like I&#39;m not the only one fiddling around with this, &lt;a href=&quot;https://www.npmjs.com/package/markdown-it-replace-link&quot; target=&quot;_blank&quot;&gt;someone else wrote all the annoying regexes for me in a markdown-it plugin&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;There&#39;s &lt;a href=&quot;https://www.11ty.dev/docs/data-eleventy-supplied/&quot; target=&quot;_blank&quot;&gt;no way to really get the base URL&lt;/a&gt;, but at least I can do it &lt;a href=&quot;https://en.wikipedia.org/wiki/Don%27t_repeat_yourself&quot; target=&quot;_blank&quot;&gt;DRY&lt;/a&gt;.&lt;/p&gt;
&lt;aside&gt;
&lt;p&gt;(I also saw &lt;a href=&quot;https://www.11ty.dev/docs/quicktips/eliminate-js/&quot; target=&quot;_blank&quot;&gt;how 11ty pulls from the Github API on build&lt;/a&gt;, which may be useful if I need to use &lt;a href=&quot;https://docs.github.com/en/rest/reference/repos#get&quot; target=&quot;_blank&quot;&gt;that sort of info&lt;/a&gt; for cachebreaking later.)&lt;/p&gt;
&lt;/aside&gt;
&lt;div style=&quot;border: 2px black solid&quot;&gt;
&lt;p&gt;&lt;img src=&quot;https://fightwithtools.dev/img/links-and-not-links.png&quot; alt=&quot;Links look bad inside the text.&quot; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;This comes from that whole annoying school of &amp;quot;native link styles are ugly so let&#39;s change them as much as possible and try to use some other thing to indicate they are links.&amp;quot;&lt;/p&gt;
&lt;p&gt;That school is one I do not attend. Clear and legible UX has to build on top of standards of design the user is familiar with lest a site confuse the reader. I can give any theme some room, you can remove underlines, or change the color to something other than close-to-link-blue, but both?! Nien.&lt;/p&gt;
&lt;p&gt;Huh... first things first... that Sass folder should really be in &lt;code&gt;src&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Ok, now to set up a &lt;code&gt;user&lt;/code&gt; overwrite to be the last file in the Sass compile process, and t/f the one that overrides general site-level stuff. Let&#39;s fix it to a blue color and remove that &lt;em&gt;very&lt;/em&gt; annoying light weight on the font.&lt;/p&gt;
&lt;p&gt;Much better.&lt;/p&gt;
&lt;p&gt;Oh, I want to make those checkboxes show up correctly. Bet there&#39;s a markdown-it plugin I can use. It looks like there are 2 possible node modules, &lt;a href=&quot;https://www.npmjs.com/package/markdown-it-task-checkbox&quot; target=&quot;_blank&quot;&gt;a more used one with some unresolved PRs and ignored issues&lt;/a&gt; and &lt;a href=&quot;https://www.npmjs.com/package/markdown-it-todo&quot; target=&quot;_blank&quot;&gt;a barely used one that correctly makes checkboxes readonly&lt;/a&gt;. It might be less popular, but I&#39;m going with the version that works the way I want right out of the box. It also happens to be a very simple plugin, so if it goes wrong, I can always hack at it.&lt;/p&gt;
&lt;p&gt;Looks good!&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git commit -am &amp;quot;Adding days 4 and 5 progress and notes&amp;quot;&lt;/code&gt;&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Hello World Devblog - Pt. 6</title>
    <link href="https://fightwithtools.dev/posts/projects/devblog/hello-day-6/"/>
    <updated>2021-06-19T03:59:43Z</updated>
    <id>https://fightwithtools.dev/posts/projects/devblog/hello-day-6/</id>
    <content type="html">&lt;ol&gt;
&lt;li&gt;Static Site Generator that can build the blog and let me host it on Github Pages&lt;/li&gt;
&lt;li&gt;I want to write posts in Markdown because I&#39;m lazy, it&#39;s easy, and it is how I take notes now.&lt;/li&gt;
&lt;li&gt;I don&#39;t want to spend a ton of time doing design work. I&#39;m doing complicated designs for other projects, so I want to pull a theme I like that I can rely on someone else to keep up.&lt;/li&gt;
&lt;li&gt;Once it gets going, I want template changes to be easy.&lt;/li&gt;
&lt;li&gt;It should be as easy as Jekyll, so I need to be able to build it using GitHub Actions, where I can just commit a template change or Markdown file and away it goes. If I can&#39;t figure this out than fk it, just use Jekyll.&lt;/li&gt;
&lt;li&gt;I require it to be used by a significant percent of my professional peers so I can get easy answers when something goes wrong.&lt;/li&gt;
&lt;li&gt;I want source maps. This is a dev log site which means whatever I do with it should be easy for other developers to read.&lt;/li&gt;
&lt;/ol&gt;
&lt;ul class=&quot;task-list&quot;&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Also &lt;a href=&quot;https://www.npmjs.com/package/@quasibit/eleventy-plugin-sitemap&quot; target=&quot;_blank&quot;&gt;the sitemap plugin&lt;/a&gt; looks cool. Should grab that later.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; So does the &lt;a href=&quot;https://www.npmjs.com/package/eleventy-plugin-reading-time&quot; target=&quot;_blank&quot;&gt;reading time one&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Also &lt;a href=&quot;https://github.com/jdsteinbach/eleventy-plugin-toc/blob/master/src/BuildTOC.js&quot; target=&quot;_blank&quot;&gt;this TOC plugin&lt;/a&gt; mby?&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Use &lt;a href=&quot;https://www.11ty.dev/docs/data-deep-merge/&quot; target=&quot;_blank&quot;&gt;Data Deep Merge&lt;/a&gt; in this blog.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Decide if I want to render the CSS fancier than just a base file and do per-template splitting.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;s&gt;
&lt;ul class=&quot;task-list&quot;&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Can I use the template inside of dinky that already exists instead of copy/pasting it?&lt;/li&gt;
&lt;/ul&gt;
&lt;/s&gt;
&lt;ul class=&quot;task-list&quot;&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Is there a way to have permalinks to posts contain metadata without organizing them into subfolders?&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; How do I cachebreak files on the basis of new build events? Datetime? &lt;code&gt;site.github.build_revision&lt;/code&gt; is how Jekyll accomplishes this, but is there a way to push that into the build process for 11ty?&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; checked=&quot;true&quot; class=&quot;markdown-todo&quot; /&gt; Make link text look less shitty. It looks like it is a whole, lighter, font.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; checked=&quot;true&quot; class=&quot;markdown-todo&quot; /&gt; Code blocks do not have good syntax highlighting. I want good syntax highlighting.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;Day-6&quot; tabindex=&quot;-1&quot;&gt;Day 6&lt;/h1&gt;
&lt;p&gt;Ok, here we go on day 6. Today I write code on a Delta flight.&lt;/p&gt;
&lt;p&gt;I&#39;ve resolved some of the very basic blockers that were absolute need-to-haves from a design perspective. There is more work to be done on the design side (obviously, I still don&#39;t have a home page) but I think I need to answer questions about the GitHub Pages deployment process before I go any further. I know I can make an 11ty blog that satisfies me now, but can I do so while also satisfying the ease of deployment and management that comes with Jekyll-style Github Pages deployment? Luckily the internet is free today, so I can find out at no added cost to my flight.&lt;/p&gt;
&lt;p&gt;The most upvoted solution I saw for Github Pages deployment was &lt;a href=&quot;https://www.linkedin.com/pulse/eleventy-github-pages-lea-tortay/&quot; target=&quot;_blank&quot;&gt;the LinkedIn post by Lea Tortay&lt;/a&gt; I found earlier. While I&#39;ve managed a number of other deploy approaches, I actually have never written my own Github Pages deployment process, so figuring that out was one of my goals with this project. Let&#39;s start with that.&lt;/p&gt;
&lt;p&gt;Oh, lol the wifi was only free for the first 5 minutes I guess? Ok, I&#39;ll pay.&lt;/p&gt;
&lt;p&gt;Hmmmmm Captive Portal problems. Time to reboot.&lt;/p&gt;
&lt;p&gt;Had to reboot, find the captive portal URL, cycle my DHCP lease and then pay for the privlige, but on the interwebs again. Payed to get on.&lt;/p&gt;
&lt;p&gt;Ok, implimented the Github actions file with a few small changes, I went ahead and updated &lt;code&gt;node-version&lt;/code&gt; to match my latest version and switched by branch from master to main. Took care of the keys as specified. The action ran... but no joy. Maybe the problem is a lack of index page? Let&#39;s try putting one together.&lt;/p&gt;
&lt;p&gt;Huh... it build from the file at &lt;code&gt;src/index.njk&lt;/code&gt; once... and now it hasn&#39;t again. I made my defaults layout the same as my posts layout, so it should work. But after I wiped it out one time, it hasn&#39;t built again.&lt;/p&gt;
&lt;p&gt;Is it possible to have the docs content not committed on &lt;code&gt;main&lt;/code&gt; but only on &lt;code&gt;gh-pages&lt;/code&gt;? That would seem to be a good solution, but let&#39;s see.&lt;/p&gt;
&lt;p&gt;Ooops, I was fiddling with trying to build a useful gitignore file for docs and passing it through and accidentally deleted all my layouts.&lt;/p&gt;
&lt;p&gt;Let me pull those files back in from the last good commit: &lt;code&gt;git checkout 32e6206c0680d9009a316b85e33461479058d81d src/_layouts/*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Yup that did it. My Index file is back.&lt;/p&gt;
&lt;p&gt;Build still isn&#39;t working. Hmmm where are the logs for this?&lt;/p&gt;
&lt;p&gt;Ok, &lt;a href=&quot;https://github.com/AramZS/devblog/actions&quot; target=&quot;_blank&quot;&gt;in the Actions tab&lt;/a&gt;, not in settings.&lt;/p&gt;
&lt;p&gt;Looks like it isn&#39;t pulling in Dinky properly as a submodule because &lt;a href=&quot;https://docs.github.com/en/pages/getting-started-with-github-pages/using-submodules-with-github-pages&quot; target=&quot;_blank&quot;&gt;Github Pages needs the https url for the repo in .gitsubmodules&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Hmmm, still not working.&lt;/p&gt;
&lt;p&gt;Ah, the issue is that the default configuration of Jekyll github pages pulls in submodules, but &lt;a href=&quot;https://github.com/actions/checkout&quot; target=&quot;_blank&quot;&gt;the default configuration of the checkout action doesn&#39;t&lt;/a&gt;. I just need to add that property to the yml file.&lt;/p&gt;
&lt;p&gt;Oh, and fix my &lt;code&gt;.editorconfig&lt;/code&gt; to work better with yml files.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git commit -am &amp;quot;Get submodules working for github actions hopefully&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Good news, a new error!&lt;/p&gt;
&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;Run peaceiris/actions-gh-pages@v3&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;INFO&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; Usage https://github.com/peaceiris/actions-gh-pages&lt;span class=&quot;token comment&quot;&gt;#readme&lt;/span&gt;&lt;br /&gt;Dump inputs&lt;br /&gt;Setup auth token&lt;br /&gt;  Error: Action failed with &lt;span class=&quot;token string&quot;&gt;&quot;not found deploy key or tokens&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Oops, but the secret in a custom environment instead of the &lt;code&gt;github-pages&lt;/code&gt; &lt;a href=&quot;https://github.com/AramZS/devblog/settings/environments&quot; target=&quot;_blank&quot;&gt;environment&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Hmmm... deploy was a success this time, but no-go on seeing any pages? Looks like it just deleted everything but the nojekyll file? I should prob look a little deeper into what is going on with these GitHub actions.&lt;/p&gt;
&lt;p&gt;Ooooh. I should make a markdown code to expand my little typing shortcuts!&lt;/p&gt;
&lt;p&gt;[ ] Build a Markdown-it plugin to take my typing shortcuts &lt;code&gt;[prob, b/c, ...?]&lt;/code&gt; and expand them on build.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git commit -am &amp;quot;Have I got the secret now?&amp;quot;&lt;/code&gt;&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Hello World Devblog - Pt. 7</title>
    <link href="https://fightwithtools.dev/posts/projects/devblog/hello-day-7/"/>
    <updated>2021-06-21T02:59:43Z</updated>
    <id>https://fightwithtools.dev/posts/projects/devblog/hello-day-7/</id>
    <content type="html">&lt;ol&gt;
&lt;li&gt;Static Site Generator that can build the blog and let me host it on Github Pages&lt;/li&gt;
&lt;li&gt;I want to write posts in Markdown because I&#39;m lazy, it&#39;s easy, and it is how I take notes now.&lt;/li&gt;
&lt;li&gt;I don&#39;t want to spend a ton of time doing design work. I&#39;m doing complicated designs for other projects, so I want to pull a theme I like that I can rely on someone else to keep up.&lt;/li&gt;
&lt;li&gt;Once it gets going, I want template changes to be easy.&lt;/li&gt;
&lt;li&gt;It should be as easy as Jekyll, so I need to be able to build it using GitHub Actions, where I can just commit a template change or Markdown file and away it goes. If I can&#39;t figure this out than fk it, just use Jekyll.&lt;/li&gt;
&lt;li&gt;I require it to be used by a significant percent of my professional peers so I can get easy answers when something goes wrong.&lt;/li&gt;
&lt;li&gt;I want source maps. This is a dev log site which means whatever I do with it should be easy for other developers to read.&lt;/li&gt;
&lt;/ol&gt;
&lt;ul class=&quot;task-list&quot;&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Also &lt;a href=&quot;https://www.npmjs.com/package/@quasibit/eleventy-plugin-sitemap&quot; target=&quot;_blank&quot;&gt;the sitemap plugin&lt;/a&gt; looks cool. Should grab that later.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; So does the &lt;a href=&quot;https://www.npmjs.com/package/eleventy-plugin-reading-time&quot; target=&quot;_blank&quot;&gt;reading time one&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Also &lt;a href=&quot;https://github.com/jdsteinbach/eleventy-plugin-toc/blob/master/src/BuildTOC.js&quot; target=&quot;_blank&quot;&gt;this TOC plugin&lt;/a&gt; mby?&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Use &lt;a href=&quot;https://www.11ty.dev/docs/data-deep-merge/&quot; target=&quot;_blank&quot;&gt;Data Deep Merge&lt;/a&gt; in this blog.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Decide if I want to render the CSS fancier than just a base file and do per-template splitting.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;s&gt;
&lt;ul class=&quot;task-list&quot;&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Can I use the template inside of dinky that already exists instead of copy/pasting it?&lt;/li&gt;
&lt;/ul&gt;
&lt;/s&gt;
&lt;ul class=&quot;task-list&quot;&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Is there a way to have permalinks to posts contain metadata without organizing them into subfolders?&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; How do I cachebreak files on the basis of new build events? Datetime? &lt;code&gt;site.github.build_revision&lt;/code&gt; is &lt;a href=&quot;https://github.com/jekyll/github-metadata/blob/master/docs/site.github.md&quot; target=&quot;_blank&quot;&gt;how Jekyll accomplishes this&lt;/a&gt;, but is there a way to push &lt;a href=&quot;https://docs.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#github-context&quot; target=&quot;_blank&quot;&gt;that&lt;/a&gt; &lt;a href=&quot;https://stackoverflow.com/questions/54310050/how-to-version-build-artifacts-using-github-actions&quot; target=&quot;_blank&quot;&gt;into the build process&lt;/a&gt; for 11ty?&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; checked=&quot;true&quot; class=&quot;markdown-todo&quot; /&gt; Make link text look less shitty. It looks like it is a whole, lighter, font.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; checked=&quot;true&quot; class=&quot;markdown-todo&quot; /&gt; Code blocks do not have good syntax highlighting. I want good syntax highlighting.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Build a Markdown-it plugin to take my typing shortcuts &lt;code&gt;[prob, b/c, ...?]&lt;/code&gt; and expand them on build.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;Day-7&quot; tabindex=&quot;-1&quot;&gt;Day 7&lt;/h1&gt;
&lt;p&gt;Ok, after struggling with the plane wifi and spending some time talking to my row-mate about us both being web engineers, I didn&#39;t get quite as much as I had planned done on the plane. So we&#39;re back with an empty build branch.&lt;/p&gt;
&lt;p&gt;Time to get back to it. I think the first thing is to check the various GitHub actions. I&#39;d hoped they&#39;d work right out of the box but no-go (maybe?). The LinkedIn post was helpful, but the fact that the author&#39;s project is no longer public makes it a pain to make sure I&#39;m following directions properly.&lt;/p&gt;
&lt;p&gt;First is &lt;a href=&quot;https://github.com/actions/setup-node&quot; target=&quot;_blank&quot;&gt;setup-node&lt;/a&gt;. And some immediate things pop out at me. First I&#39;d set up with Node 15 locally. But it looks like this action is only able to use up to and including Node 14. So, let&#39;s use nvm and rebuild the node_modules and package-lock.json files with Node 14. Deleting them both, changing the value in &lt;code&gt;.nvmrc&lt;/code&gt; and rebooting my terminal.&lt;/p&gt;
&lt;p&gt;Oh, NVM doesn&#39;t automatically use the latest node version huh? Ok, I&#39;ll specify the version to match the action on Github. Downloading and installing it now.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;npm install&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Ok. Everything still works, so that is good!&lt;/p&gt;
&lt;p&gt;But what could be the issue, it must be me gitignoring the docs folder, I guess it has to commit the folder? I still don&#39;t want the docs folder on my main branch if I can avoid it. What if I just remove the docs gitignore during the build process?&lt;/p&gt;
&lt;p&gt;I&#39;ll add the line to the top of the commands run, it basically echoes the contents of .gitignore starting at the 2nd line back into the .gitignore file:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;- run: echo &amp;quot;$(tail -n +2 .gitignore)&amp;quot; &amp;gt; .gitignore&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git commit -am &amp;quot;Update build process and attempt to commit the docs folder in the build process&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Hmmm still no go. Let&#39;s read &lt;a href=&quot;https://github.com/peaceiris/actions-gh-pages#github-actions-for-github-pages&quot; target=&quot;_blank&quot;&gt;the actions-gh-pages docs&lt;/a&gt; from zero instead.&lt;/p&gt;
&lt;p&gt;It looks like &lt;code&gt;publish_dir:&lt;/code&gt; in the build task says is the &lt;em&gt;source&lt;/em&gt; folder to publish onto the gh-pages branch. A good lesson to read the docs right here because literally line 2 is&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The next example step will deploy ./public directory to the remote gh-pages branch.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;git commit -am &amp;quot;Is the issue the docs directory needs to be the public_dir?&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Interesting, now the content is properly in the gh-pages branch! I might not even need the gitignore change?&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git commit -am &amp;quot;Remove the gitignore rewrite&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;I also originally had the folder set for Github Pages to be &lt;code&gt;/docs&lt;/code&gt; but that&#39;s not how this works, the action publishes the content inside the docs folder to the root of the &lt;code&gt;gh-pages&lt;/code&gt; branch. I have to fix that in the repo settings.&lt;/p&gt;
&lt;p&gt;Sweet, I see a page now! Just have to fix how the stylesheet works in the build environment!&lt;/p&gt;
&lt;p&gt;While I&#39;m here I should &lt;a href=&quot;https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site/managing-a-custom-domain-for-your-github-pages-site&quot; target=&quot;_blank&quot;&gt;map my apex domain to the Github Site&lt;/a&gt;. Easy enough, create a bunch of A records in GoDaddy&#39;s DNS controls and then direct my &lt;code&gt;www&lt;/code&gt; record CNAME to my &lt;a href=&quot;http://github.io/&quot; target=&quot;_blank&quot;&gt;github.io&lt;/a&gt; user page.&lt;/p&gt;
&lt;p&gt;I&#39;ll create the correct CNAME file and set up 11ty to pass it through to the build process.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;eleventyConfig.addPassthroughCopy(&amp;quot;./CNAME&amp;quot;);&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;And I&#39;m going to set up my site data using &lt;a href=&quot;https://www.npmjs.com/package/dotenv&quot; target=&quot;_blank&quot;&gt;dotenv&lt;/a&gt; in order to have my local &lt;code&gt;http://localhost:8080&lt;/code&gt; server used for the site domain when local and otherwise have it use my domain.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git commit -am &amp;quot;Setting up dotenv to have proper site data and domain use&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Oops, swapped my prod and local domains.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git commit -am &amp;quot;Ooops mixed up my local and prod urls&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Ok, it looks like it is all working for my my base level requirements 1-6. I still want a source map for my CSS and that isn&#39;t done yet, but that is a Sass task.&lt;/p&gt;
&lt;p&gt;I still have some other major tasks... like building a real home page, including serious SE/MO and a few other things, but now I can move forward on that work confident that this system hits my baseline requirements and I can invest more time into it.&lt;/p&gt;
&lt;p&gt;Finishing off my requirements means handling some Sass to get mapping to work. I can define &lt;code&gt;sourceMap&lt;/code&gt; and write the file appropriately, but it looks like I&#39;ll need handle two complications, first the relative paths to the source file will have to be passed through so the Sass files can be exposed on the front end. That&#39;s easy enough with a few functions in &lt;code&gt;.eleventy.js&lt;/code&gt;. But it also apparently will need to have a full, not relative, url.&lt;/p&gt;
&lt;p&gt;I thought I might be able to use &lt;a href=&quot;https://www.11ty.dev/docs/data-global-custom/&quot; target=&quot;_blank&quot;&gt;global data added at the config level, but it looks like that isn&#39;t available yet&lt;/a&gt;. Didn&#39;t see that on my first run through as it isn&#39;t super obviously called out.&lt;/p&gt;
&lt;p&gt;I decided to use a combination of dotenv and setting some internal Node-level variables here to set up the domain name once and reuse it elsewhere.&lt;/p&gt;
&lt;p&gt;Hmmm, while trying to debug I noticed my image rewrite method was also applying to all links. Oops. I&#39;ll need to pass in a smarter function.&lt;/p&gt;
&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;		&lt;span class=&quot;token function-variable function&quot;&gt;replaceLink&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;link&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; env&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;			&lt;span class=&quot;token comment&quot;&gt;// console.log(&quot;env:&quot;, env);&lt;/span&gt;&lt;br /&gt;			&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; imageLinkRegex &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token regex&quot;&gt;&lt;span class=&quot;token regex-delimiter&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;token regex-source language-regex&quot;&gt;^..\/img\/&lt;/span&gt;&lt;span class=&quot;token regex-delimiter&quot;&gt;/&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;			&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;link &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; imageLinkRegex&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;link&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;				&lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;					env&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;site&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;site_url &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt;&lt;br /&gt;					&lt;span class=&quot;token string&quot;&gt;&quot;/img/&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt;&lt;br /&gt;					link&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;imageLinkRegex&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;				&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;			&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;				&lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; link&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;			&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;		&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;While I&#39;m fiddling with markdown-it, I should also &lt;a href=&quot;https://github.com/markdown-it/markdown-it/blob/master/docs/architecture.md#renderer&quot; target=&quot;_blank&quot;&gt;add &lt;code&gt;target=&amp;quot;_blank&amp;quot;&lt;/code&gt; to all my links&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Still looking at how to get &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Tools/Debugger/How_to/Use_a_source_map&quot; target=&quot;_blank&quot;&gt;sourcemaps&lt;/a&gt; working.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git commit -am &amp;quot;Fixing a number of path and link issues, still trying to get Sass working with sourcemaps&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;ul class=&quot;task-list&quot;&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; See if we can start Markdown&#39;s interpretation of H tags to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements#multiple_h1&quot; target=&quot;_blank&quot;&gt;start at 2, since H1&lt;/a&gt; is always pulled from the page title metadata. If it isn&#39;t easy, I just have to change my pattern of writing in the MD documents.&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  
  <entry>
    <title>Hello World Devblog - Pt. 8</title>
    <link href="https://fightwithtools.dev/posts/projects/devblog/hello-day-8/"/>
    <updated>2021-06-23T02:59:43Z</updated>
    <id>https://fightwithtools.dev/posts/projects/devblog/hello-day-8/</id>
    <content type="html">&lt;ol&gt;
&lt;li&gt;Static Site Generator that can build the blog and let me host it on Github Pages&lt;/li&gt;
&lt;li&gt;I want to write posts in Markdown because I&#39;m lazy, it&#39;s easy, and it is how I take notes now.&lt;/li&gt;
&lt;li&gt;I don&#39;t want to spend a ton of time doing design work. I&#39;m doing complicated designs for other projects, so I want to pull a theme I like that I can rely on someone else to keep up.&lt;/li&gt;
&lt;li&gt;Once it gets going, I want template changes to be easy.&lt;/li&gt;
&lt;li&gt;It should be as easy as Jekyll, so I need to be able to build it using GitHub Actions, where I can just commit a template change or Markdown file and away it goes. If I can&#39;t figure this out than fk it, just use Jekyll.&lt;/li&gt;
&lt;li&gt;I require it to be used by a significant percent of my professional peers so I can get easy answers when something goes wrong.&lt;/li&gt;
&lt;li&gt;I want source maps. This is a dev log site which means whatever I do with it should be easy for other developers to read.&lt;/li&gt;
&lt;/ol&gt;
&lt;ul class=&quot;task-list&quot;&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; checked=&quot;true&quot; class=&quot;markdown-todo&quot; /&gt; Also &lt;a href=&quot;https://www.npmjs.com/package/@quasibit/eleventy-plugin-sitemap&quot; target=&quot;_blank&quot;&gt;the sitemap plugin&lt;/a&gt; looks cool. Should grab that later.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; So does the &lt;a href=&quot;https://www.npmjs.com/package/eleventy-plugin-reading-time&quot; target=&quot;_blank&quot;&gt;reading time one&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Also &lt;a href=&quot;https://github.com/jdsteinbach/eleventy-plugin-toc/blob/master/src/BuildTOC.js&quot; target=&quot;_blank&quot;&gt;this TOC plugin&lt;/a&gt; mby?&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; checked=&quot;true&quot; class=&quot;markdown-todo&quot; /&gt; Use &lt;a href=&quot;https://www.11ty.dev/docs/data-deep-merge/&quot; target=&quot;_blank&quot;&gt;Data Deep Merge&lt;/a&gt; in this blog.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Decide if I want to render the CSS fancier than just a base file and do per-template splitting.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;s&gt;
&lt;ul class=&quot;task-list&quot;&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Can I use the template inside of dinky that already exists instead of copy/pasting it?&lt;/li&gt;
&lt;/ul&gt;
&lt;/s&gt;
&lt;ul class=&quot;task-list&quot;&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Is there a way to have permalinks to posts contain metadata without organizing them into subfolders?&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; checked=&quot;true&quot; class=&quot;markdown-todo&quot; /&gt; How do I cachebreak files on the basis of new build events? Datetime? &lt;code&gt;site.github.build_revision&lt;/code&gt; is &lt;a href=&quot;https://github.com/jekyll/github-metadata/blob/master/docs/site.github.md&quot; target=&quot;_blank&quot;&gt;how Jekyll accomplishes this&lt;/a&gt;, but is there a way to push &lt;a href=&quot;https://docs.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#github-context&quot; target=&quot;_blank&quot;&gt;that&lt;/a&gt; &lt;a href=&quot;https://stackoverflow.com/questions/54310050/how-to-version-build-artifacts-using-github-actions&quot; target=&quot;_blank&quot;&gt;into the build process&lt;/a&gt; for 11ty?&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; checked=&quot;true&quot; class=&quot;markdown-todo&quot; /&gt; Make link text look less shitty. It looks like it is a whole, lighter, font.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; checked=&quot;true&quot; class=&quot;markdown-todo&quot; /&gt; Code blocks do not have good syntax highlighting. I want good syntax highlighting.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Build a Markdown-it plugin to take my typing shortcuts &lt;code&gt;[prob, b/c, ...?]&lt;/code&gt; and expand them on build.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; See if we can start Markdown&#39;s interpretation of H tags to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements#multiple_h1&quot; target=&quot;_blank&quot;&gt;start at 2, since H1&lt;/a&gt; is always pulled from the page title metadata. If it isn&#39;t easy, I just have to change my pattern of writing in the MD documents.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Should I &lt;a href=&quot;https://www.madebymike.com.au/writing/11ty-filters-data-shortcodes/&quot; target=&quot;_blank&quot;&gt;explore some shortcodes&lt;/a&gt;?&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Day-8&quot; tabindex=&quot;-1&quot;&gt;Day 8&lt;/h2&gt;
&lt;p&gt;So, the Sass source-map is still giving me file:// URLs. This is apparently some sort of weird error in the dart-sass implementation? I found a few issues, all of which seem to point at &lt;a href=&quot;https://github.com/sass/libsass/issues/908#issuecomment-76452477&quot; target=&quot;_blank&quot;&gt;one issue&#39;s set of solutions&lt;/a&gt;. But none of these worked for me. I&#39;m not really sure why. I think because dart-sass assumes source maps are only used for local development, not also for public-facing examples like I want. But the top of that thread pointed me &lt;a href=&quot;https://github.com/joliss/node-sass-source-map-example/blob/master/better-output.js&quot; target=&quot;_blank&quot;&gt;at a useful build script example&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;On the basis of that (which still uses dirname for local file paths) I altered it to match my reality of running a local server&amp;quot;&lt;/p&gt;
&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;	&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; outFile &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;/assets/css/style.css&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;	&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; result &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; sass&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;renderSync&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;		includePaths&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;**/*.{scss,sass}&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;!node_modules/**&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;		file&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;src/_sass/_index.sass&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;		outputStyle&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;compressed&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;		sourceMap&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;		sourceMapContents&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;		outFile&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; path&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;process&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;cwd&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; path&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;basename&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;outFile&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;	console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Sass renderSync result&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; result&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;	&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; fullCSS &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; result&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;css&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;	&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; map &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;result&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;map&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;	map&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;sourceRoot &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; domain&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;	result&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;map &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;stringify&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;map&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;\t&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;	&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; fullMap &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; result&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;map&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I understand everything that my code is doing here, but the use of &lt;code&gt;process.cwd&lt;/code&gt; here is very confusing. It works, for sure! I now have:&lt;/p&gt;
&lt;pre class=&quot;language-json&quot;&gt;&lt;code class=&quot;language-json&quot;&gt;	&lt;span class=&quot;token property&quot;&gt;&quot;version&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;	&lt;span class=&quot;token property&quot;&gt;&quot;sourceRoot&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;http://localhost:8080&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;	&lt;span class=&quot;token property&quot;&gt;&quot;sources&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;br /&gt;		&lt;span class=&quot;token string&quot;&gt;&quot;dinky/_sass/jekyll-theme-dinky.scss&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;		&lt;span class=&quot;token string&quot;&gt;&quot;dinky/_sass/rouge-github.scss&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;		&lt;span class=&quot;token string&quot;&gt;&quot;src/_sass/base-syntax-highlighting.scss&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;		&lt;span class=&quot;token string&quot;&gt;&quot;src/_sass/syntax-highlighting.scss&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;		&lt;span class=&quot;token string&quot;&gt;&quot;src/_sass/user.sass&quot;&lt;/span&gt;&lt;br /&gt;	&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The code sample says &amp;quot;HACK 1: Force all &amp;quot;sources&amp;quot; to be relative to project root&amp;quot; but it apparently does this so that dart-sass... gets rid of the project root? I find this process very confusing, I&#39;m adding the project root so Sass can remove the project root? This is fking baffling to me and apparently hits some process that is very badly documented in dart-sass. The other hack &amp;quot;node-sass does not support sourceRoot, but we can add it&amp;quot; at least makes sense. Seems like something you should support! It looks like some iteration of Node-based Sass takes the &lt;code&gt;sourceMapRoot&lt;/code&gt; configuration property, but not dart-sass. The documentation and debugging process is very confusing for this because dart-sass links to node-sass for most of its documentation, but node-sass clearly has some features that dart-sass does not, and the fact that issues are often in node-sass that are actually about dart-sass is just a &lt;em&gt;mess&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Anyway, this works now... and it gives me a really useful insight into how the source map is built. I can hack better paths for sources! The paths themselves are useful for the project, but having them at the base of the website sort of irks me. Now I can put them all in a nice &lt;code&gt;sass&lt;/code&gt; folder, makes it neat.&lt;/p&gt;
&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;	&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; newSources &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; map&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;sources&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;		&lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;sass/&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; source&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;	map&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;sources &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; newSources&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And I can also change my passthroughs in &lt;code&gt;.eleventy.js&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;	eleventyConfig&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addPassthroughCopy&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;		&lt;span class=&quot;token string&quot;&gt;&quot;dinky/_sass&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;sass/dinky/_sass&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;	eleventyConfig&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addPassthroughCopy&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;		&lt;span class=&quot;token string&quot;&gt;&quot;src/_sass&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;sass/src/_sass&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If this works correctly on publish, it will resolve the last of my base requirements!&lt;/p&gt;
&lt;p&gt;Ok, I was thinking about how to handle build-time cache-breaking and realized that there&#39;s likely a way to handle getting a cache-break variable at the build stage. There&#39;s &lt;a href=&quot;https://github.com/jekyll/github-metadata&quot; target=&quot;_blank&quot;&gt;a plugin for Jekyll to do it&lt;/a&gt;, it looks like &lt;a href=&quot;https://github.com/jekyll/github-metadata/blob/master/docs/authentication.md&quot; target=&quot;_blank&quot;&gt;it does so at least partially via the Github API&lt;/a&gt;. It gets &lt;a href=&quot;https://github.com/jekyll/github-metadata/blob/master/docs/site.github.md&quot; target=&quot;_blank&quot;&gt;a pretty good list of data too&lt;/a&gt;. There&#39;s also &lt;a href=&quot;https://docs.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#github-context&quot; target=&quot;_blank&quot;&gt;the &amp;quot;Github Context&amp;quot; which is available to GitHub actions&lt;/a&gt;. I could call the API during build time, which is what it appears that Jekyll is doing (I didn&#39;t really look too deeply into the plugin). But if this data is available in the Actions context... couldn&#39;t I export it as a environment variable? Why not try adding that to the Github Actions script?&lt;/p&gt;
&lt;pre class=&quot;language-yaml&quot;&gt;&lt;code class=&quot;language-yaml&quot;&gt;        &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; export GITHUB_HEAD_SHA=$&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now I should be able to call this in my site data, right? So I&#39;ll update the file at &lt;code&gt;src/_data/site.js&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;module&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function-variable function&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;	&lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;		lang&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;en-US&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;		github&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;			build_revision&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; process&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;env&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;GITHUB_HEAD_SHA&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;		&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;		site_url&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; process&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;env&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;DOMAIN&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Huh... about to try this but a thought occurs... should I just export the whole &lt;code&gt;github&lt;/code&gt; object? Would that work? Wait... &lt;a href=&quot;https://docs.github.com/en/actions/reference/environment-variables&quot; target=&quot;_blank&quot;&gt;is it already there&lt;/a&gt;? Let me try that both ways and see what I get.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git commit -am &amp;quot;Set up new Sass build process and new build vars in use&amp;quot; &lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Well... the Sass sitemaps built properly, but none of the Github Actions env stuff seemed to have gone off. For some reason calling &lt;code&gt;process.env.GITHUB_JOB&lt;/code&gt; just got me &lt;code&gt;deploy&lt;/code&gt;. Which is the job name, not a job-run ID. But a step in the right direction, just me mistakenly reading the docs.&lt;/p&gt;
&lt;p&gt;What if I set the &lt;code&gt;env&lt;/code&gt; at the level of job? I think this means I could prob use &lt;code&gt;GITHUB_SHA&lt;/code&gt;, but I want to see what works.&lt;/p&gt;
&lt;pre class=&quot;language-yaml&quot;&gt;&lt;code class=&quot;language-yaml&quot;&gt;&lt;span class=&quot;token key atrule&quot;&gt;jobs&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token key atrule&quot;&gt;deploy&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token key atrule&quot;&gt;runs-on&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; ubuntu&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;latest&lt;br /&gt;    &lt;span class=&quot;token key atrule&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;&lt;br /&gt;      &lt;span class=&quot;token key atrule&quot;&gt;MY_GITHUB_RUN_ID&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; $&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ah, that did it, so now I know how to use both!&lt;/p&gt;
&lt;p&gt;The sitemap plugin looks easy to implement. Let&#39;s try that!&lt;/p&gt;
&lt;p&gt;Looks good! A little basic as sitemaps go, and if this site gets extensive I may have to figure out file splitting, but there&#39;s a lot of flexibility and options in the plugin so I&#39;m not too worried.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git commit -am &amp;quot;Set up sitemap&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Just checking off stuff in this post!&lt;/p&gt;
&lt;p&gt;Looks like the Deep Data Merge is up and running already. I&#39;ll do a quick double check and it does appear to work fine!&lt;/p&gt;
&lt;p&gt;RSS feed next. Need to add the collection tag to my &lt;code&gt;posts.json&lt;/code&gt; in &lt;code&gt;src/posts&lt;/code&gt; in order to have it properly in a &lt;code&gt;posts&lt;/code&gt; collection.&lt;/p&gt;
&lt;pre class=&quot;language-json&quot;&gt;&lt;code class=&quot;language-json&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;	&lt;span class=&quot;token property&quot;&gt;&quot;layout&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;post.njk&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;	&lt;span class=&quot;token property&quot;&gt;&quot;description&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Aram is talking about code&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;	&lt;span class=&quot;token property&quot;&gt;&quot;tags&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;posts&quot;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Huh, I&#39;m getting this in the output now: &lt;code&gt;Benchmark (Configuration): &amp;quot;htmlToAbsoluteUrls&amp;quot; Nunjucks Async Filter took 40ms (8.9%, called 8×, 5.0ms each)&lt;/code&gt; and the domain name is wrong in the RSS feed. Found some info on building permalinks that may be useful for my more dynamic link urls, but doesn&#39;t seem to be for this. Huh, looks like this generates an Atom feed, not an RSS standard one. Going to rename the file accordingly.&lt;/p&gt;
&lt;p&gt;Still no go on getting those URLs set up properly. I need to pass the calculated domain in to the page metadata, but using template tags or JS functions doesn&#39;t seem to be doing it. The domain data just isn&#39;t going through.&lt;/p&gt;
&lt;p&gt;Ok, I had thought the functions in the &lt;code&gt;js&lt;/code&gt; layout-based front matter would execute themselves, but it looks like I have to write them to execute in the context of the front matter itself. So now the front matter looks like this:&lt;/p&gt;
&lt;pre class=&quot;language-liquid&quot;&gt;&lt;code class=&quot;language-liquid&quot;&gt;&lt;span class=&quot;token operator&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;js&lt;br /&gt;{&lt;br /&gt;  &quot;permalink&quot;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &quot;feed.xml&quot;,&lt;br /&gt;  &quot;eleventyExcludeFromCollections&quot;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; true,&lt;br /&gt;  &quot;metadata&quot;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; {&lt;br /&gt;    &quot;title&quot;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &quot;Feed &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; Fight With Tools &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; Aram&#39;s Dev Blog&quot;,&lt;br /&gt;    &quot;subtitle&quot;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &quot;Notes on various projects&quot;,&lt;br /&gt;    &quot;url&quot;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; (function(){ return process.env.DOMAIN &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &quot;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;&quot; })(),&lt;br /&gt;    &quot;feedUrl&quot;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; (function(){ return process.env.DOMAIN &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &quot;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;feed.xml&quot; })(),&lt;br /&gt;    &quot;author&quot;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; {&lt;br /&gt;      &quot;name&quot;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &quot;Aram Zucker&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;Scharff&quot;,&lt;br /&gt;      &quot;email&quot;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &quot;aramdevblog@aramzs.me&quot;&lt;br /&gt;    }&lt;br /&gt;  },&lt;br /&gt;  &quot;internalPageTypes&quot;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; [ &quot;feed&quot; ]&lt;br /&gt;}&lt;br /&gt;&lt;span class=&quot;token operator&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Looks like the solution was to use a immediately-invoked function there. Working well now!&lt;/p&gt;
&lt;p&gt;Looks like &lt;a href=&quot;https://obsolete29.com/posts/ogp-seo-favicons-eleventy/&quot; target=&quot;_blank&quot;&gt;there is a straightforward way to handle building a good robots.txt&lt;/a&gt; file.&lt;/p&gt;
&lt;p&gt;I&#39;ll hand build an RSS template so I have an RSS2 feed as well.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git commit -am &amp;quot;Set up various feeds and crawling tools&amp;quot;&lt;/code&gt;&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Hello World Devblog - Pt. 9</title>
    <link href="https://fightwithtools.dev/posts/projects/devblog/hello-day-9/"/>
    <updated>2021-06-29T02:59:43Z</updated>
    <id>https://fightwithtools.dev/posts/projects/devblog/hello-day-9/</id>
    <content type="html">&lt;ol&gt;
&lt;li&gt;Static Site Generator that can build the blog and let me host it on Github Pages&lt;/li&gt;
&lt;li&gt;I want to write posts in Markdown because I&#39;m lazy, it&#39;s easy, and it is how I take notes now.&lt;/li&gt;
&lt;li&gt;I don&#39;t want to spend a ton of time doing design work. I&#39;m doing complicated designs for other projects, so I want to pull a theme I like that I can rely on someone else to keep up.&lt;/li&gt;
&lt;li&gt;Once it gets going, I want template changes to be easy.&lt;/li&gt;
&lt;li&gt;It should be as easy as Jekyll, so I need to be able to build it using GitHub Actions, where I can just commit a template change or Markdown file and away it goes. If I can&#39;t figure this out than fk it, just use Jekyll.&lt;/li&gt;
&lt;li&gt;I require it to be used by a significant percent of my professional peers so I can get easy answers when something goes wrong.&lt;/li&gt;
&lt;li&gt;I want source maps. This is a dev log site which means whatever I do with it should be easy for other developers to read.&lt;/li&gt;
&lt;/ol&gt;
&lt;ul class=&quot;task-list&quot;&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; checked=&quot;true&quot; class=&quot;markdown-todo&quot; /&gt; Also &lt;a href=&quot;https://www.npmjs.com/package/@quasibit/eleventy-plugin-sitemap&quot; target=&quot;_blank&quot;&gt;the sitemap plugin&lt;/a&gt; looks cool. Should grab that later.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; So does the &lt;a href=&quot;https://www.npmjs.com/package/eleventy-plugin-reading-time&quot; target=&quot;_blank&quot;&gt;reading time one&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Also &lt;a href=&quot;https://github.com/jdsteinbach/eleventy-plugin-toc/&quot; target=&quot;_blank&quot;&gt;this TOC plugin&lt;/a&gt; mby?&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; checked=&quot;true&quot; class=&quot;markdown-todo&quot; /&gt; Use &lt;a href=&quot;https://www.11ty.dev/docs/data-deep-merge/&quot; target=&quot;_blank&quot;&gt;Data Deep Merge&lt;/a&gt; in this blog.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Decide if I want to render the CSS fancier than just a base file and do per-template splitting.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;s&gt;
&lt;ul class=&quot;task-list&quot;&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Can I use the template inside of dinky that already exists instead of copy/pasting it?&lt;/li&gt;
&lt;/ul&gt;
&lt;/s&gt;
&lt;ul class=&quot;task-list&quot;&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Is there a way to have permalinks to posts contain metadata without organizing them into subfolders?&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; checked=&quot;true&quot; class=&quot;markdown-todo&quot; /&gt; How do I cachebreak files on the basis of new build events? Datetime? &lt;code&gt;site.github.build_revision&lt;/code&gt; is &lt;a href=&quot;https://github.com/jekyll/github-metadata/blob/master/docs/site.github.md&quot; target=&quot;_blank&quot;&gt;how Jekyll accomplishes this&lt;/a&gt;, but is there a way to push &lt;a href=&quot;https://docs.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#github-context&quot; target=&quot;_blank&quot;&gt;that&lt;/a&gt; &lt;a href=&quot;https://stackoverflow.com/questions/54310050/how-to-version-build-artifacts-using-github-actions&quot; target=&quot;_blank&quot;&gt;into the build process&lt;/a&gt; for 11ty?&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; checked=&quot;true&quot; class=&quot;markdown-todo&quot; /&gt; Make link text look less shitty. It looks like it is a whole, lighter, font.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; checked=&quot;true&quot; class=&quot;markdown-todo&quot; /&gt; Code blocks do not have good syntax highlighting. I want good syntax highlighting.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Build a Markdown-it plugin to take my typing shortcuts &lt;code&gt;[prob, b/c, ...?]&lt;/code&gt; and expand them on build.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; See if we can start Markdown&#39;s interpretation of H tags to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements#multiple_h1&quot; target=&quot;_blank&quot;&gt;start at 2, since H1&lt;/a&gt; is always pulled from the page title metadata. If it isn&#39;t easy, I just have to change my pattern of writing in the MD documents.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Should I &lt;a href=&quot;https://www.madebymike.com.au/writing/11ty-filters-data-shortcodes/&quot; target=&quot;_blank&quot;&gt;explore some shortcodes&lt;/a&gt;?&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Day-9&quot; tabindex=&quot;-1&quot;&gt;Day 9&lt;/h2&gt;
&lt;p&gt;Looks like the RSS feed is correct but being served from Github Pages as &amp;quot;application/octet-stream&amp;quot;. I found a Stack Overflow that said it needs a trailing slash. But now that serves it as text/html. Apparently it needs to have an xml ending, but if we want to keep &lt;code&gt;/rss/&lt;/code&gt; &lt;a href=&quot;https://luosky.com/2012/07/24/create-custom-rss-feed-for-octopress/&quot; target=&quot;_blank&quot;&gt;we need to create an xml file&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git commit -am &amp;quot;Set an xml index for the rss path&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;That did it! Good to know that Github Pages is &lt;em&gt;very&lt;/em&gt; dependent on file endings, and if it doesn&#39;t get them it defaults &lt;code&gt;/path-with-no-ending-slash&lt;/code&gt; to a downloadable octet-stream and &lt;code&gt;/path-with-ending-slash/&lt;/code&gt; to HTML.&lt;/p&gt;
&lt;p&gt;I want to build some post-only conditionals into a common base template. The goal here is to make my templates as DRY as possible. No code should have to be repeated. Looks like there &lt;a href=&quot;https://bryanlrobinson.com/blog/using-nunjucks-if-expressions-to-create-an-active-navigation-state-in-11ty/&quot; target=&quot;_blank&quot;&gt;are some tools to do that in Nunjucks&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Ok, so I&#39;m going to split this into a few chunks.&lt;/p&gt;
&lt;p&gt;First I&#39;m going to establish a base template, one that all the others can pull off of. This can set up the basic HTML structure, my HTML, HEAD and BODY tags. It can also establish the baseline HTML to make the template work, like the wrapper-classed div and the semantic HTML5 tags within.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git commit -am &amp;quot;Setting up some templates to inheret from.&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Then I&#39;ll want to define the areas that the layouts that pull off the base can pull from. Nunjucks seems to do this with &lt;code&gt;block&lt;/code&gt; tags. So I&#39;ll set up some of these block tags in the &lt;code&gt;&amp;lt;main&amp;gt;&lt;/code&gt; area to start with.&lt;/p&gt;
&lt;pre class=&quot;language-liquid&quot;&gt;&lt;code class=&quot;language-liquid&quot;&gt;		&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;main&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;br /&gt;			{&lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt; block precontent &lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;}&lt;br /&gt;			{&lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt; endblock &lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;}&lt;br /&gt;			&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;section&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;br /&gt;				{&lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt; block content &lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;}&lt;br /&gt;				{{ content &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; safe }}&lt;br /&gt;				{&lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt; endblock &lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;}&lt;br /&gt;			&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;section&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;br /&gt;			{&lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt; block postcontent &lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;}&lt;br /&gt;			{&lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt; endblock &lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;}&lt;br /&gt;		&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;main&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;With the basics in place, I can actually drop the entire content of &lt;code&gt;post.njk&lt;/code&gt; and replace it with an &lt;code&gt;extends&lt;/code&gt; statement.&lt;/p&gt;
&lt;p&gt;{% extends &amp;quot;base.njk&amp;quot; %}&lt;/p&gt;
&lt;p&gt;The original dinky template was designed for single page sites. So the post template works pretty much unchanged with no issues. But what about my index page? I&#39;m going to want to add stuff to there.&lt;/p&gt;
&lt;p&gt;First of all, I want a chunk of that page that shows my various Work in Progress posts. I&#39;ve tagged the posts themselves correctly &lt;a href=&quot;https://www.11ty.dev/docs/collections/&quot; target=&quot;_blank&quot;&gt;to create an 11ty collection&lt;/a&gt;, but I need to figure out how to call it. And I may want to display it elsewhere, so I&#39;m going to create a component I can easily include that walks through the WiP tag.&lt;/p&gt;
&lt;pre class=&quot;language-liquid&quot;&gt;&lt;code class=&quot;language-liquid&quot;&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;ul&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;br /&gt;    {&lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; post &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; collections.WiP &lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;}&lt;br /&gt;	&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;li&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;{{post.data.title}}&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;li&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;br /&gt;	{&lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;endfor&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;}&lt;br /&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;ul&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This is a good start, but what if I only want one category of WiP? Or if I want to separate it out into projects? I need to make this more reusable.&lt;/p&gt;
&lt;p&gt;But what about sorting? I may need to sort by date and dates are always messy. To make sure I can get them work right, I should start by adding a date to all post templates. I could add it in the post template itself, but I suspect there may be other pages I want to have the date on, so I&#39;m going to handle it with an if/else chain at the base template.&lt;/p&gt;
&lt;pre class=&quot;language-liquid&quot;&gt;&lt;code class=&quot;language-liquid&quot;&gt;	&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;header&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;br /&gt;	{&lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt; block header &lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;}&lt;br /&gt;&lt;br /&gt;		{&lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &#39;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;posts&#39; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; page.url &lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;}&lt;br /&gt;		&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;--&lt;/span&gt; post mode &lt;span class=&quot;token operator&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;br /&gt;		&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;time&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;{{ page.date.toDateString() }}&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;time&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;br /&gt;		{&lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt; elif &#39;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;projects&#39; &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; page.url &lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;}&lt;br /&gt;		&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;--&lt;/span&gt; projects mode &lt;span class=&quot;token operator&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;br /&gt;		{&lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;}&lt;br /&gt;		&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;--&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; mode &lt;span class=&quot;token operator&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;br /&gt;		{&lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;endif&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;}&lt;br /&gt;		&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;h1 class&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&quot;header&quot;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;{{ title }}&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;h1&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;br /&gt;		&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;p class&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&quot;header&quot;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;{{ description }}&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;p&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;	{&lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt; endblock &lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;}&lt;br /&gt;	&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;header&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Oh, these dates aren&#39;t great, they seem to be pulling from some info that isn&#39;t totally accurate via the 11ty defaults&lt;/p&gt;
&lt;p&gt;Surprising no one, dates are a &lt;a href=&quot;https://www.11ty.dev/docs/pitfalls/&quot; target=&quot;_blank&quot;&gt;Common Pitfall&lt;/a&gt;. &lt;a href=&quot;https://www.11ty.dev/docs/dates/&quot; target=&quot;_blank&quot;&gt;11ty documentation advises to directly set the date&lt;/a&gt;. And I can&#39;t just set them any which way, I need to set them &lt;a href=&quot;https://yaml.org/type/timestamp.html&quot; target=&quot;_blank&quot;&gt;via the YAML date format&lt;/a&gt;. Once that&#39;s done, I can display them using that built-in toDateString function in a way that makes the dates more human readable.&lt;/p&gt;
&lt;p&gt;git commit -am &amp;quot;Adding template parts&amp;quot;&lt;/p&gt;
&lt;p&gt;Ok back to my reusable post list. I started with a pretty basic version, but it looks to me like &lt;a href=&quot;https://www.trysmudford.com/blog/encapsulated-11ty-components/&quot; target=&quot;_blank&quot;&gt;the right approach is Macros&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Huh... that didn&#39;t work.&lt;/p&gt;
&lt;p&gt;Ok maybe this:&lt;/p&gt;
&lt;p&gt;{% raw %}&lt;/p&gt;
&lt;pre class=&quot;language-liquid&quot;&gt;&lt;code class=&quot;language-liquid&quot;&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;--&lt;/span&gt; https&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;www.&lt;span class=&quot;token number&quot;&gt;11&lt;/span&gt;ty.dev&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;docs&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;collections&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;--&lt;/span&gt; Should I use {{ &quot;abcdef&quot; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;reverse&lt;/span&gt; }} &lt;span class=&quot;token operator&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;ul&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;br /&gt;	&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;--&lt;/span&gt; Collection&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; {{collectionName}} &lt;span class=&quot;token operator&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;br /&gt;    {&lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; post &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; collections.{{collectionName}} &lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;}&lt;br /&gt;	&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;li&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;{{post.data.title}}&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;li&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;br /&gt;	{&lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;endfor&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;}&lt;br /&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;ul&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;{% endraw %}&lt;/p&gt;
&lt;p&gt;Especially with the variable name in the &lt;code&gt;for&lt;/code&gt; deceleration? I don&#39;t know if that works the way I think it does and I may even just need &lt;a href=&quot;https://www.11ty.dev/docs/languages/nunjucks/#shortcodes&quot; target=&quot;_blank&quot;&gt;a shortcode instead&lt;/a&gt;. But I&#39;d like to get it working. Let&#39;s try just echoing out the passed in value first.&lt;/p&gt;
&lt;p&gt;Damn, still no go.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git commit -am &amp;quot;Get macros in the mix.&amp;quot;&lt;/code&gt;&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Hello World Devblog - Pt. 10</title>
    <link href="https://fightwithtools.dev/posts/projects/devblog/hello-day-10/"/>
    <updated>2021-07-05T02:59:43Z</updated>
    <id>https://fightwithtools.dev/posts/projects/devblog/hello-day-10/</id>
    <content type="html">&lt;ol&gt;
&lt;li&gt;Static Site Generator that can build the blog and let me host it on Github Pages&lt;/li&gt;
&lt;li&gt;I want to write posts in Markdown because I&#39;m lazy, it&#39;s easy, and it is how I take notes now.&lt;/li&gt;
&lt;li&gt;I don&#39;t want to spend a ton of time doing design work. I&#39;m doing complicated designs for other projects, so I want to pull a theme I like that I can rely on someone else to keep up.&lt;/li&gt;
&lt;li&gt;Once it gets going, I want template changes to be easy.&lt;/li&gt;
&lt;li&gt;It should be as easy as Jekyll, so I need to be able to build it using GitHub Actions, where I can just commit a template change or Markdown file and away it goes. If I can&#39;t figure this out than fk it, just use Jekyll.&lt;/li&gt;
&lt;li&gt;I require it to be used by a significant percent of my professional peers so I can get easy answers when something goes wrong.&lt;/li&gt;
&lt;li&gt;I want source maps. This is a dev log site which means whatever I do with it should be easy for other developers to read.&lt;/li&gt;
&lt;/ol&gt;
&lt;ul class=&quot;task-list&quot;&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; checked=&quot;true&quot; class=&quot;markdown-todo&quot; /&gt; Also &lt;a href=&quot;https://www.npmjs.com/package/@quasibit/eleventy-plugin-sitemap&quot; target=&quot;_blank&quot;&gt;the sitemap plugin&lt;/a&gt; looks cool. Should grab that later.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; So does the &lt;a href=&quot;https://www.npmjs.com/package/eleventy-plugin-reading-time&quot; target=&quot;_blank&quot;&gt;reading time one&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Also &lt;a href=&quot;https://github.com/jdsteinbach/eleventy-plugin-toc/&quot; target=&quot;_blank&quot;&gt;this TOC plugin&lt;/a&gt; mby?&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; checked=&quot;true&quot; class=&quot;markdown-todo&quot; /&gt; Use &lt;a href=&quot;https://www.11ty.dev/docs/data-deep-merge/&quot; target=&quot;_blank&quot;&gt;Data Deep Merge&lt;/a&gt; in this blog.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Decide if I want to render the CSS fancier than just a base file and do per-template splitting.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;s&gt;
&lt;ul class=&quot;task-list&quot;&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Can I use the template inside of dinky that already exists instead of copy/pasting it?&lt;/li&gt;
&lt;/ul&gt;
&lt;/s&gt;
&lt;ul class=&quot;task-list&quot;&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Is there a way to have permalinks to posts contain metadata without organizing them into subfolders?&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; checked=&quot;true&quot; class=&quot;markdown-todo&quot; /&gt; How do I cachebreak files on the basis of new build events? Datetime? &lt;code&gt;site.github.build_revision&lt;/code&gt; is &lt;a href=&quot;https://github.com/jekyll/github-metadata/blob/master/docs/site.github.md&quot; target=&quot;_blank&quot;&gt;how Jekyll accomplishes this&lt;/a&gt;, but is there a way to push &lt;a href=&quot;https://docs.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#github-context&quot; target=&quot;_blank&quot;&gt;that&lt;/a&gt; &lt;a href=&quot;https://stackoverflow.com/questions/54310050/how-to-version-build-artifacts-using-github-actions&quot; target=&quot;_blank&quot;&gt;into the build process&lt;/a&gt; for 11ty?&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; checked=&quot;true&quot; class=&quot;markdown-todo&quot; /&gt; Make link text look less shitty. It looks like it is a whole, lighter, font.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; checked=&quot;true&quot; class=&quot;markdown-todo&quot; /&gt; Code blocks do not have good syntax highlighting. I want good syntax highlighting.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Build a Markdown-it plugin to take my typing shortcuts &lt;code&gt;[prob, b/c, ...?]&lt;/code&gt; and expand them on build.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; See if we can start Markdown&#39;s interpretation of H tags to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements#multiple_h1&quot; target=&quot;_blank&quot;&gt;start at 2, since H1&lt;/a&gt; is always pulled from the page title metadata. If it isn&#39;t easy, I just have to change my pattern of writing in the MD documents.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Should I &lt;a href=&quot;https://www.madebymike.com.au/writing/11ty-filters-data-shortcodes/&quot; target=&quot;_blank&quot;&gt;explore some shortcodes&lt;/a&gt;?&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Day-10&quot; tabindex=&quot;-1&quot;&gt;Day 10&lt;/h2&gt;
&lt;p&gt;Ok, when we left off I had totally failed to build a macro in Nunjucks.&lt;/p&gt;
&lt;p&gt;Ok, I forgot to change the argument that was passed in the macros file and when I did that it worked.&lt;/p&gt;
&lt;p&gt;So... progress!&lt;/p&gt;
&lt;p&gt;Now let&#39;s try and figure out how to make it more useful.&lt;/p&gt;
&lt;p&gt;There are some interesting things you can do with Macros! I really would like to get it to work, so before we go the filter route, let&#39;s see if we can make my intended methodology work. This seems like it would be a thing people would want to do! So some more web searching may be in order.&lt;/p&gt;
&lt;p&gt;Ok, after trying a few different search terms &lt;a href=&quot;https://stackoverflow.com/questions/50685814/nunjucks-nested-variables&quot; target=&quot;_blank&quot;&gt;I&#39;ve found a useful middle ground&lt;/a&gt;. But I know that &lt;a href=&quot;https://www.11ty.dev/docs/languages/nunjucks/#filters&quot; target=&quot;_blank&quot;&gt;Nunjucks applies filters in a specific way in 11ty&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Hmmm, apparently part of the issue &lt;a href=&quot;https://github.com/11ty/eleventy/issues/354#issuecomment-449904901&quot; target=&quot;_blank&quot;&gt;is that Nunjucks fails silently on rendering stuff&lt;/a&gt;. Is there a way to turn it off? Looks like first &lt;a href=&quot;https://www.11ty.dev/docs/languages/nunjucks/#optional-use-your-nunjucks-environment&quot; target=&quot;_blank&quot;&gt;I&#39;ll have to redefine the Nunjucks rendering environment&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The Nunjucks page on 11ty suggests we pass in the &lt;code&gt;_includes&lt;/code&gt; folder name as a string: &lt;code&gt;new Nunjucks.FileSystemLoader(&amp;quot;_includes&amp;quot;)&lt;/code&gt;. But that&#39;s an extra instance of that string to keep track of. Better to use my 11ty config object instead. I also want to switch &lt;code&gt;throwOnUndefined&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;, but only in the local environment. Another good use for &lt;code&gt;process.env.DOMAIN&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Now at the top of my &lt;code&gt;.eleventy.js&lt;/code&gt; file I have&lt;/p&gt;
&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; domain_name &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;https://fightwithtools.dev&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; throwOnUndefinedSetting &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;process&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;env&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;IS_LOCAL&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;	domain_name &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;http://localhost:8080&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;	throwOnUndefinedSetting &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And I have a new section that sets up my own Nunjucks filter:&lt;/p&gt;
&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;	&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; nunjucksEnvironment &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Nunjucks&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Environment&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;		&lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Nunjucks&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;FileSystemLoader&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;siteConfiguration&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;dir&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;includes&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;		&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;			throwOnUndefined&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; throwOnUndefinedSetting&lt;br /&gt;		&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;	&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;	eleventyConfig&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;setLibrary&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;njk&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; nunjucksEnvironment&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ok... interesting... when I set it up, it no longer reads the include statement properly, which calls a template located in &lt;code&gt;src/_layouts&lt;/code&gt; and passed into the configuration object to 11ty as &lt;code&gt;dir.layouts&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;{% extends &amp;quot;base.njk&amp;quot; %}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Hmmmm. Well &lt;a href=&quot;https://github.com/11ty/eleventy/blob/master/src/Engines/Nunjucks.js#L124&quot; target=&quot;_blank&quot;&gt;let&#39;s take a look at how 11ty configures it&lt;/a&gt;.&lt;/p&gt;
&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;	&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; normalize &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;normalize-path&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;	&lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;	&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;pathNormalizer&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;pathString&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;		&lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;normalize&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;path&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;normalize&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;path&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;.&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;	&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; nunjucksEnvironment &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Nunjucks&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;Environment&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;		&lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Nunjucks&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;FileSystemLoader&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;br /&gt;			&lt;span class=&quot;token function&quot;&gt;pathNormalizer&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;siteConfiguration&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;dir&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;includes&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;			&lt;span class=&quot;token function&quot;&gt;pathNormalizer&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;siteConfiguration&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;dir&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;layouts&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;			&lt;span class=&quot;token function&quot;&gt;pathNormalizer&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;.&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;		&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;		&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;			throwOnUndefined&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; throwOnUndefinedSetting&lt;br /&gt;		&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;	&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;	eleventyConfig&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;setLibrary&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;njk&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; nunjucksEnvironment&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Well, &lt;a href=&quot;https://github.com/11ty/eleventy/blob/master/src/Engines/Nunjucks.js#L124&quot; target=&quot;_blank&quot;&gt;it looks like 11ty does more to configure the Nunjucks rendering engine than I thought&lt;/a&gt;. Let&#39;s see if I can try to duplicate how the core 11ty approach does it.&lt;/p&gt;
&lt;p&gt;Hmmm, pulled the same configuration, but now it looks like one of my posts isn&#39;t working. It looks like Nunjucks is adding some secret juice to the &lt;code&gt;raw&lt;/code&gt; tag for escaping stuff. Hmmm, ok, there is a lot of badly documented stuff that 11ty is doing with the Nunjucks engine and modifying it. Perhaps it is time to step back from attempting to mod it and take a different approach.&lt;/p&gt;
&lt;p&gt;Maybe I should go for the custom filter method instead. Let&#39;s step back.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git commit -am &amp;quot;Trying to get variable variables working and 11ty to set throwOnUndefined for nunjucks&amp;quot;&lt;/code&gt;&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Hello World Devblog - Pt. 11</title>
    <link href="https://fightwithtools.dev/posts/projects/devblog/hello-day-11/"/>
    <updated>2021-07-06T02:59:43Z</updated>
    <id>https://fightwithtools.dev/posts/projects/devblog/hello-day-11/</id>
    <content type="html">&lt;ol&gt;
&lt;li&gt;Static Site Generator that can build the blog and let me host it on Github Pages&lt;/li&gt;
&lt;li&gt;I want to write posts in Markdown because I&#39;m lazy, it&#39;s easy, and it is how I take notes now.&lt;/li&gt;
&lt;li&gt;I don&#39;t want to spend a ton of time doing design work. I&#39;m doing complicated designs for other projects, so I want to pull a theme I like that I can rely on someone else to keep up.&lt;/li&gt;
&lt;li&gt;Once it gets going, I want template changes to be easy.&lt;/li&gt;
&lt;li&gt;It should be as easy as Jekyll, so I need to be able to build it using GitHub Actions, where I can just commit a template change or Markdown file and away it goes. If I can&#39;t figure this out than fk it, just use Jekyll.&lt;/li&gt;
&lt;li&gt;I require it to be used by a significant percent of my professional peers so I can get easy answers when something goes wrong.&lt;/li&gt;
&lt;li&gt;I want source maps. This is a dev log site which means whatever I do with it should be easy for other developers to read.&lt;/li&gt;
&lt;/ol&gt;
&lt;ul class=&quot;task-list&quot;&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; checked=&quot;true&quot; class=&quot;markdown-todo&quot; /&gt; Also &lt;a href=&quot;https://www.npmjs.com/package/@quasibit/eleventy-plugin-sitemap&quot; target=&quot;_blank&quot;&gt;the sitemap plugin&lt;/a&gt; looks cool. Should grab that later.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; So does the &lt;a href=&quot;https://www.npmjs.com/package/eleventy-plugin-reading-time&quot; target=&quot;_blank&quot;&gt;reading time one&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Also &lt;a href=&quot;https://github.com/jdsteinbach/eleventy-plugin-toc/&quot; target=&quot;_blank&quot;&gt;this TOC plugin&lt;/a&gt; mby?&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; checked=&quot;true&quot; class=&quot;markdown-todo&quot; /&gt; Use &lt;a href=&quot;https://www.11ty.dev/docs/data-deep-merge/&quot; target=&quot;_blank&quot;&gt;Data Deep Merge&lt;/a&gt; in this blog.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Decide if I want to render the CSS fancier than just a base file and do per-template splitting.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;s&gt;
&lt;ul class=&quot;task-list&quot;&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Can I use the template inside of dinky that already exists instead of copy/pasting it?&lt;/li&gt;
&lt;/ul&gt;
&lt;/s&gt;
&lt;ul class=&quot;task-list&quot;&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Is there a way to have permalinks to posts contain metadata without organizing them into subfolders?&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; checked=&quot;true&quot; class=&quot;markdown-todo&quot; /&gt; How do I cachebreak files on the basis of new build events? Datetime? &lt;code&gt;site.github.build_revision&lt;/code&gt; is &lt;a href=&quot;https://github.com/jekyll/github-metadata/blob/master/docs/site.github.md&quot; target=&quot;_blank&quot;&gt;how Jekyll accomplishes this&lt;/a&gt;, but is there a way to push &lt;a href=&quot;https://docs.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#github-context&quot; target=&quot;_blank&quot;&gt;that&lt;/a&gt; &lt;a href=&quot;https://stackoverflow.com/questions/54310050/how-to-version-build-artifacts-using-github-actions&quot; target=&quot;_blank&quot;&gt;into the build process&lt;/a&gt; for 11ty?&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; checked=&quot;true&quot; class=&quot;markdown-todo&quot; /&gt; Make link text look less shitty. It looks like it is a whole, lighter, font.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; checked=&quot;true&quot; class=&quot;markdown-todo&quot; /&gt; Code blocks do not have good syntax highlighting. I want good syntax highlighting.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Build a Markdown-it plugin to take my typing shortcuts &lt;code&gt;[prob, b/c, ...?]&lt;/code&gt; and expand them on build.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; See if we can start Markdown&#39;s interpretation of H tags to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements#multiple_h1&quot; target=&quot;_blank&quot;&gt;start at 2, since H1&lt;/a&gt; is always pulled from the page title metadata. If it isn&#39;t easy, I just have to change my pattern of writing in the MD documents.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Should I &lt;a href=&quot;https://www.madebymike.com.au/writing/11ty-filters-data-shortcodes/&quot; target=&quot;_blank&quot;&gt;explore some shortcodes&lt;/a&gt;?&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Day-11&quot; tabindex=&quot;-1&quot;&gt;Day 11&lt;/h2&gt;
&lt;p&gt;Ok, still not getting Macros working exactly the way I wanted. It would be really useful to have 11ty throw actual errors as part of this, but when I tried to set my own version of the Nunjucks Environment I kept hitting against undocumented settings that 11ty apparently sets up. This is getting way off the main thing I was trying to build. I could dive deeper in, but this site still isn&#39;t live and I would like to get it to that point first. So, for now, I&#39;m going to just drop it.&lt;/p&gt;
&lt;p&gt;But before I do, I do think this is a major problem and would be useful for eleventy to fix. So, let&#39;s check issues one last time, and check if there is something for me to file.&lt;/p&gt;
&lt;p&gt;It looks like &lt;a href=&quot;https://github.com/11ty/eleventy/issues/895&quot; target=&quot;_blank&quot;&gt;there is an issue in the right space&lt;/a&gt;, but the suggested solution on the issue doesn&#39;t work. If I &lt;a href=&quot;https://github.com/pdehaan/11ty-blog-ideas/issues/7&quot; target=&quot;_blank&quot;&gt;follow through the tickets&lt;/a&gt; a little more I can &lt;a href=&quot;https://github.com/pdehaan/11ty-nunjucks-config/blob/master/.eleventy.js&quot; target=&quot;_blank&quot;&gt;see another suggested solution&lt;/a&gt;. But it doesn&#39;t solve the issue with the raw tags no longer working either.&lt;/p&gt;
&lt;p&gt;I don&#39;t understand. &lt;a href=&quot;https://github.com/11ty/eleventy/blob/master/src/Engines/Nunjucks.js#L128&quot; target=&quot;_blank&quot;&gt;This&lt;/a&gt; &lt;em&gt;should&lt;/em&gt; work. I even checked to make sure my version of Nunjucks is the same! I even tried removing one of the files, but now my Nunjucks execution is failing on a different chunk of JS in the &lt;code&gt;js&lt;/code&gt; front matter block in &lt;code&gt;rss2-feed.njk&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;So let&#39;s add my voice.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git commit -am &amp;quot;Bookmarking attempt to set custom NJK library.&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;A quick bookmark of the current state of the site to help the Eleventy folks with debugging my issue!&lt;/p&gt;
&lt;p&gt;And now &lt;a href=&quot;https://github.com/11ty/eleventy/issues/1879&quot; target=&quot;_blank&quot;&gt;a write up&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;Ok, let&#39;s move on!&lt;/p&gt;
&lt;p&gt;I&#39;m going to give up on Macros for now and instead I&#39;ll &lt;a href=&quot;https://www.11ty.dev/docs/languages/nunjucks/#single-shortcode&quot; target=&quot;_blank&quot;&gt;use a Shortcode&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Ok, honestly this is a &lt;strong&gt;ton&lt;/strong&gt; easier. I should have just gone this direction in the first place.&lt;/p&gt;
&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;	eleventyConfig&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addShortcode&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;postList&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;collectionName&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; collectionOfPosts&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;		&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; postList &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; collectionOfPosts&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;			&lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&amp;lt;li&gt;&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;post&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;title&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&amp;lt;/li&gt;&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;		&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;		&lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&amp;lt;p&gt;&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;collectionName&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&amp;lt;/p&gt;&lt;br /&gt;		&amp;lt;ul&gt;&lt;br /&gt;			&amp;lt;!-- Collection: &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;collectionName&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt; --&gt;&lt;br /&gt;			&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;postList&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;\n&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&lt;br /&gt;		&amp;lt;/ul&gt;&lt;br /&gt;		&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and then I can call it easily with 11ty data like this:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;{% postList &amp;quot;WiP&amp;quot;, collections[&amp;quot;WiP&amp;quot;] %}&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git commit -am &amp;quot;Set up a shortcode for postlist&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Ok, now I want to be able to pass the post type I want to list in the Markdown file.&lt;/p&gt;
&lt;p&gt;New markdown front matter to make that work:&lt;/p&gt;
&lt;pre class=&quot;language-yaml&quot;&gt;&lt;code class=&quot;language-yaml&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;---&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token key atrule&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; index&lt;br /&gt;&lt;span class=&quot;token key atrule&quot;&gt;eleventyExcludeFromCollections&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean important&quot;&gt;true&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token key atrule&quot;&gt;internalPageTypes&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;home&#39;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token key atrule&quot;&gt;postLists&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;br /&gt;	&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token key atrule&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;WiP&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;collection&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;WiP&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;date&quot;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;	&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token key atrule&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Posts&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;collection&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;posts&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;reverse&quot;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;	&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;---&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and I&#39;ll alter the shortcode to use the new arguments.&lt;/p&gt;
&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;	eleventyConfig&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addShortcode&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;postList&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;collectionName&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; collectionOfPosts&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; order&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;		&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;order&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;			order &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;reverse&quot;&lt;/span&gt;&lt;br /&gt;		&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;		&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;order &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;reverse&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;			collectionOfPosts&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;reverse&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;		&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;		&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; postList &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; collectionOfPosts&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;			&lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&amp;lt;li&gt;&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;post&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;title&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&amp;lt;/li&gt;&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;		&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;		&lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&amp;lt;p&gt;&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;collectionName&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&amp;lt;/p&gt;&lt;br /&gt;		&amp;lt;ul&gt;&lt;br /&gt;			&amp;lt;!-- Collection: &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;collectionName&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt; --&gt;&lt;br /&gt;			&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;postList&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;\n&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&lt;br /&gt;		&amp;lt;/ul&gt;&lt;br /&gt;		&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and now my &lt;code&gt;index.njk&lt;/code&gt; file is reusable for any vertical file I wish to reuse it with.&lt;/p&gt;
&lt;pre class=&quot;language-liquid&quot;&gt;&lt;code class=&quot;language-liquid&quot;&gt;{&lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt; extends &quot;base.njk&quot; &lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;}&lt;br /&gt;&lt;br /&gt;{&lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt; block postcontent &lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;}&lt;br /&gt;	&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;--&lt;/span&gt; post list&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;br /&gt;	{&lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; postType &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; postLists &lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;}&lt;br /&gt;		{&lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt; postList postType.name,&lt;br /&gt;		collections[postType.collection],&lt;br /&gt;		postType.order &lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;}&lt;br /&gt;	{&lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;endfor&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;}&lt;br /&gt;{&lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt; endblock &lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;git commit -am &amp;quot;Got shortcode + vertical layout template working&amp;quot;&lt;/code&gt;&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Hello World Devblog - Pt. 12</title>
    <link href="https://fightwithtools.dev/posts/projects/devblog/hello-day-12/"/>
    <updated>2021-07-06T02:59:43Z</updated>
    <id>https://fightwithtools.dev/posts/projects/devblog/hello-day-12/</id>
    <content type="html">&lt;ol&gt;
&lt;li&gt;Static Site Generator that can build the blog and let me host it on Github Pages&lt;/li&gt;
&lt;li&gt;I want to write posts in Markdown because I&#39;m lazy, it&#39;s easy, and it is how I take notes now.&lt;/li&gt;
&lt;li&gt;I don&#39;t want to spend a ton of time doing design work. I&#39;m doing complicated designs for other projects, so I want to pull a theme I like that I can rely on someone else to keep up.&lt;/li&gt;
&lt;li&gt;Once it gets going, I want template changes to be easy.&lt;/li&gt;
&lt;li&gt;It should be as easy as Jekyll, so I need to be able to build it using GitHub Actions, where I can just commit a template change or Markdown file and away it goes. If I can&#39;t figure this out than fk it, just use Jekyll.&lt;/li&gt;
&lt;li&gt;I require it to be used by a significant percent of my professional peers so I can get easy answers when something goes wrong.&lt;/li&gt;
&lt;li&gt;I want source maps. This is a dev log site which means whatever I do with it should be easy for other developers to read.&lt;/li&gt;
&lt;/ol&gt;
&lt;ul class=&quot;task-list&quot;&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; checked=&quot;true&quot; class=&quot;markdown-todo&quot; /&gt; Also &lt;a href=&quot;https://www.npmjs.com/package/@quasibit/eleventy-plugin-sitemap&quot; target=&quot;_blank&quot;&gt;the sitemap plugin&lt;/a&gt; looks cool. Should grab that later.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; So does the &lt;a href=&quot;https://www.npmjs.com/package/eleventy-plugin-reading-time&quot; target=&quot;_blank&quot;&gt;reading time one&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Also &lt;a href=&quot;https://github.com/jdsteinbach/eleventy-plugin-toc/&quot; target=&quot;_blank&quot;&gt;this TOC plugin&lt;/a&gt; mby?&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; checked=&quot;true&quot; class=&quot;markdown-todo&quot; /&gt; Use &lt;a href=&quot;https://www.11ty.dev/docs/data-deep-merge/&quot; target=&quot;_blank&quot;&gt;Data Deep Merge&lt;/a&gt; in this blog.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Decide if I want to render the CSS fancier than just a base file and do per-template splitting.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;s&gt;
&lt;ul class=&quot;task-list&quot;&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Can I use the template inside of dinky that already exists instead of copy/pasting it?&lt;/li&gt;
&lt;/ul&gt;
&lt;/s&gt;
&lt;ul class=&quot;task-list&quot;&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Is there a way to have permalinks to posts contain metadata without organizing them into subfolders?&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; checked=&quot;true&quot; class=&quot;markdown-todo&quot; /&gt; How do I cachebreak files on the basis of new build events? Datetime? &lt;code&gt;site.github.build_revision&lt;/code&gt; is &lt;a href=&quot;https://github.com/jekyll/github-metadata/blob/master/docs/site.github.md&quot; target=&quot;_blank&quot;&gt;how Jekyll accomplishes this&lt;/a&gt;, but is there a way to push &lt;a href=&quot;https://docs.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#github-context&quot; target=&quot;_blank&quot;&gt;that&lt;/a&gt; &lt;a href=&quot;https://stackoverflow.com/questions/54310050/how-to-version-build-artifacts-using-github-actions&quot; target=&quot;_blank&quot;&gt;into the build process&lt;/a&gt; for 11ty?&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; checked=&quot;true&quot; class=&quot;markdown-todo&quot; /&gt; Make link text look less shitty. It looks like it is a whole, lighter, font.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; checked=&quot;true&quot; class=&quot;markdown-todo&quot; /&gt; Code blocks do not have good syntax highlighting. I want good syntax highlighting.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Build a Markdown-it plugin to take my typing shortcuts &lt;code&gt;[prob, b/c, ...?]&lt;/code&gt; and expand them on build.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; See if we can start Markdown&#39;s interpretation of H tags to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements#multiple_h1&quot; target=&quot;_blank&quot;&gt;start at 2, since H1&lt;/a&gt; is always pulled from the page title metadata. If it isn&#39;t easy, I just have to change my pattern of writing in the MD documents.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Should I &lt;a href=&quot;https://www.madebymike.com.au/writing/11ty-filters-data-shortcodes/&quot; target=&quot;_blank&quot;&gt;explore some shortcodes&lt;/a&gt;?&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Day-12&quot; tabindex=&quot;-1&quot;&gt;Day 12&lt;/h2&gt;
&lt;p&gt;Ok, I&#39;d like to have a custom collection so I can get a list of project names. So is there a way to add a collection API that&#39;s an entirely different collection? Something I can use instead of &lt;code&gt;tags&lt;/code&gt; in other words&lt;/p&gt;
&lt;ul class=&quot;task-list&quot;&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Not what I want, but I should prob do this &lt;a href=&quot;https://www.11ty.dev/docs/quicktips/tag-pages/&quot; target=&quot;_blank&quot;&gt;https://www.11ty.dev/docs/quicktips/tag-pages/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; This will be good to have on the bottom of these posts - &lt;a href=&quot;https://www.11ty.dev/docs/filters/collection-items/&quot; target=&quot;_blank&quot;&gt;https://www.11ty.dev/docs/filters/collection-items/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Feels a little hacky, but it looks like &lt;a href=&quot;https://stackoverflow.com/questions/66083103/how-to-generate-a-list-of-all-collections-in-11ty&quot; target=&quot;_blank&quot;&gt;the way to do this is to create a global object and filter the output I want into there&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;There&#39;s another way I could potentially handle this, and that&#39;s by folder structure. I think it makes sense to try that first and see what we can do with it. First we&#39;ll move a post into this new folder structure to try and see if we can query the path usefuly.&lt;/p&gt;
&lt;p&gt;I&#39;ll move my hello-day-1 post into &lt;code&gt;src/posts/projects/devblog&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Now can I get a list of paths under a particular path? I&#39;m not seeing a way actually. It seems like the sort of thing that it would make sense to be easy to do. Yet, no clear sign of how to do it.&lt;/p&gt;
&lt;p&gt;I thought this might work, but no go:&lt;/p&gt;
&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;	eleventyConfig&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addCollection&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;projects&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;collectionApi&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; collectionApi&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getFilteredByGlob&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;src/projects/*&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ok, looks like I&#39;m going to have to do something a little more complex.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git commit -am &amp;quot;First attempt at setting up projects list&amp;quot;&lt;/code&gt;&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Hello World Devblog - Pt. 13</title>
    <link href="https://fightwithtools.dev/posts/projects/devblog/hello-day-13/"/>
    <updated>2021-07-23T02:59:43Z</updated>
    <id>https://fightwithtools.dev/posts/projects/devblog/hello-day-13/</id>
    <content type="html">&lt;ol&gt;
&lt;li&gt;Static Site Generator that can build the blog and let me host it on Github Pages&lt;/li&gt;
&lt;li&gt;I want to write posts in Markdown because I&#39;m lazy, it&#39;s easy, and it is how I take notes now.&lt;/li&gt;
&lt;li&gt;I don&#39;t want to spend a ton of time doing design work. I&#39;m doing complicated designs for other projects, so I want to pull a theme I like that I can rely on someone else to keep up.&lt;/li&gt;
&lt;li&gt;Once it gets going, I want template changes to be easy.&lt;/li&gt;
&lt;li&gt;It should be as easy as Jekyll, so I need to be able to build it using GitHub Actions, where I can just commit a template change or Markdown file and away it goes. If I can&#39;t figure this out than fk it, just use Jekyll.&lt;/li&gt;
&lt;li&gt;I require it to be used by a significant percent of my professional peers so I can get easy answers when something goes wrong.&lt;/li&gt;
&lt;li&gt;I want source maps. This is a dev log site which means whatever I do with it should be easy for other developers to read.&lt;/li&gt;
&lt;/ol&gt;
&lt;ul class=&quot;task-list&quot;&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; checked=&quot;true&quot; class=&quot;markdown-todo&quot; /&gt; Also &lt;a href=&quot;https://www.npmjs.com/package/@quasibit/eleventy-plugin-sitemap&quot; target=&quot;_blank&quot;&gt;the sitemap plugin&lt;/a&gt; looks cool. Should grab that later.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; So does the &lt;a href=&quot;https://www.npmjs.com/package/eleventy-plugin-reading-time&quot; target=&quot;_blank&quot;&gt;reading time one&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Also &lt;a href=&quot;https://github.com/jdsteinbach/eleventy-plugin-toc/&quot; target=&quot;_blank&quot;&gt;this TOC plugin&lt;/a&gt; mby?&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; checked=&quot;true&quot; class=&quot;markdown-todo&quot; /&gt; Use &lt;a href=&quot;https://www.11ty.dev/docs/data-deep-merge/&quot; target=&quot;_blank&quot;&gt;Data Deep Merge&lt;/a&gt; in this blog.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Decide if I want to render the CSS fancier than just a base file and do per-template splitting.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;s&gt;
&lt;ul class=&quot;task-list&quot;&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Can I use the template inside of dinky that already exists instead of copy/pasting it?&lt;/li&gt;
&lt;/ul&gt;
&lt;/s&gt;
&lt;ul class=&quot;task-list&quot;&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Is there a way to have permalinks to posts contain metadata without organizing them into subfolders?&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; checked=&quot;true&quot; class=&quot;markdown-todo&quot; /&gt; How do I cachebreak files on the basis of new build events? Datetime? &lt;code&gt;site.github.build_revision&lt;/code&gt; is &lt;a href=&quot;https://github.com/jekyll/github-metadata/blob/master/docs/site.github.md&quot; target=&quot;_blank&quot;&gt;how Jekyll accomplishes this&lt;/a&gt;, but is there a way to push &lt;a href=&quot;https://docs.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#github-context&quot; target=&quot;_blank&quot;&gt;that&lt;/a&gt; &lt;a href=&quot;https://stackoverflow.com/questions/54310050/how-to-version-build-artifacts-using-github-actions&quot; target=&quot;_blank&quot;&gt;into the build process&lt;/a&gt; for 11ty?&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; checked=&quot;true&quot; class=&quot;markdown-todo&quot; /&gt; Make link text look less shitty. It looks like it is a whole, lighter, font.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; checked=&quot;true&quot; class=&quot;markdown-todo&quot; /&gt; Code blocks do not have good syntax highlighting. I want good syntax highlighting.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Build a Markdown-it plugin to take my typing shortcuts &lt;code&gt;[prob, b/c, ...?]&lt;/code&gt; and expand them on build.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; See if we can start Markdown&#39;s interpretation of H tags to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements#multiple_h1&quot; target=&quot;_blank&quot;&gt;start at 2, since H1&lt;/a&gt; is always pulled from the page title metadata. If it isn&#39;t easy, I just have to change my pattern of writing in the MD documents.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Should I &lt;a href=&quot;https://www.madebymike.com.au/writing/11ty-filters-data-shortcodes/&quot; target=&quot;_blank&quot;&gt;explore some shortcodes&lt;/a&gt;?&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Day-13&quot; tabindex=&quot;-1&quot;&gt;Day 13&lt;/h2&gt;
&lt;p&gt;Ok, I&#39;m trying to create a taxonomy that queries projects so I can list posts by their parent project. I tried to do it with &lt;code&gt;addGlobalData&lt;/code&gt; but that&#39;s apparently a future feature of 11ty. So I&#39;m headed back from DC now on the Acela (it&#39;s been a long time since the last time that was true) so it&#39;s coooooooooooooooode time.&lt;/p&gt;
&lt;p&gt;The main thing to note here is I want to be able to get:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;A list of &amp;quot;projects&amp;quot;&lt;/li&gt;
&lt;li&gt;A list of posts under each Project.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;So instead I&#39;m going to use the global data folder &lt;code&gt;_data&lt;/code&gt; and move my operation over there.&lt;/p&gt;
&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// In src/_data/projects.js&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; readdirSync &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;fs&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;getDirectories&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token parameter&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token function&quot;&gt;readdirSync&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;source&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; withFileTypes&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;	&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;dirent&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; dirent&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;isDirectory&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;	&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;dirent&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; dirent&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getDirectories&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;src/posts/projects/&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;module&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;exports &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getDirectories&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;src/posts/projects/&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And now I have a global data object I can iterate over. Sweet!&lt;/p&gt;
&lt;pre class=&quot;language-liquid&quot;&gt;&lt;code class=&quot;language-liquid&quot;&gt;		{&lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; project &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; projects &lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;}&lt;br /&gt;			&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;li class&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&quot;capitalize&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;first&quot;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;{{project}}&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;li&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;br /&gt;		{&lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;endfor&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ok, now that I have the list of projects. I need to do something with them. Basically these should link to project pages that work like category pages in WordPress.&lt;/p&gt;
&lt;p&gt;But before I get to that, every time I go through a tunnel my local environment dies because it is loading a remote URL for my Prism styles. Let&#39;s fix that. I&#39;m going to copy it locally and set up a passthrough.&lt;/p&gt;
&lt;p&gt;Ok, and while I&#39;m here, let me add proper categories for the home page.&lt;/p&gt;
&lt;p&gt;Oh wait, that didn&#39;t work. It doesn&#39;t have the capacity to handle empty collections. I thought I&#39;d get an empty array, but apparently not. Ok, I&#39;ll write some checks in to my shortcode.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git commit -m &amp;quot;Setting up home page structure with local prism css&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Ok. That worked. Time to read about &lt;a href=&quot;https://www.11ty.dev/docs/pages-from-data/&quot; target=&quot;_blank&quot;&gt;building Pages from Data with 11ty&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Ok so, let&#39;s build it out at &lt;code&gt;project-pages.njk&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&quot;language-liquid&quot;&gt;&lt;code class=&quot;language-liquid&quot;&gt;&lt;span class=&quot;token operator&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;br /&gt;pagination&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt;&lt;br /&gt;    data&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; projects&lt;br /&gt;    &lt;span class=&quot;token function&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;br /&gt;    alias&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; project&lt;br /&gt;permalink&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &quot;projects&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;{{ project &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; slug }}&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;&quot;&lt;br /&gt;title&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &quot;Project&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; {{ project &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; slug }}&quot;&lt;br /&gt;&lt;span class=&quot;token operator&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;{&lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt; block postcontent &lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;}&lt;br /&gt;	&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;h3 class&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&quot;capitalize&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;first&quot;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;{{project}}&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;h3&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;	&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;--&lt;/span&gt; post list&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;br /&gt;{&lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt; endblock &lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Alright, the page is getting built, but the title meta isn&#39;t populated. How to fix?&lt;/p&gt;
&lt;p&gt;Ok, &lt;a href=&quot;https://github.com/11ty/eleventy/issues/1061#issuecomment-606217361&quot; target=&quot;_blank&quot;&gt;it doesn&#39;t appear to be clearly documented, but I need to use&lt;/a&gt; &lt;code&gt;eleventyComputed&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;So I replace the &lt;code&gt;title&lt;/code&gt; property as follows:&lt;/p&gt;
&lt;pre class=&quot;language-liquid&quot;&gt;&lt;code class=&quot;language-liquid&quot;&gt;&lt;span class=&quot;token operator&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;br /&gt;pagination&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt;&lt;br /&gt;    data&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; projects&lt;br /&gt;    &lt;span class=&quot;token function&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;br /&gt;    alias&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; project&lt;br /&gt;permalink&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &quot;projects&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;{{ project &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; slug }}&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;&quot;&lt;br /&gt;eleventyComputed&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt;&lt;br /&gt;  title&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &quot;Project&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; {{ project.title }}&quot;&lt;br /&gt;&lt;span class=&quot;token operator&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ok, I&#39;m getting the title now. But I want to filter the list of project posts by the project metadata.&lt;/p&gt;
&lt;p&gt;This is more complicated.&lt;/p&gt;
&lt;p&gt;But ok, here&#39;s what I ended up doing&lt;/p&gt;
&lt;p&gt;First, I needed to make the project global data object even more complicated. It now needs a Title, a slug and a &lt;code&gt;projectName&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;To fill out that projectName I need to stop putting the project data in the blog post and instead put it in the&lt;br /&gt;
&lt;a href=&quot;https://www.11ty.dev/docs/data-template-dir/&quot; target=&quot;_blank&quot;&gt;directory&#39;s data file&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Then I need to pull the content of that data file into my new global object&#39;s &lt;code&gt;projectName&lt;/code&gt; like so:&lt;/p&gt;
&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; readdirSync &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;fs&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; path &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;path&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;getDirectories&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token parameter&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token function&quot;&gt;readdirSync&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;source&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; withFileTypes&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;	&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;dirent&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; dirent&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;isDirectory&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;	&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;dirent&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; dirent&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;name&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; directorySet &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getDirectories&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;src/posts/projects/&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;	&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;projectDir&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;		&lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;			title&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; projectDir&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;charAt&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;toUpperCase&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; projectDir&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;slice&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;			slug&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; projectDir&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;			projectName&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;path&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;./src/posts/projects/&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;projectDir&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;projectDir&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;.json&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;project&lt;br /&gt;		&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now the pages that I&#39;m generating for individual projects can filter by that value:&lt;/p&gt;
&lt;pre class=&quot;language-liquid&quot;&gt;&lt;code class=&quot;language-liquid&quot;&gt;	&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;ul&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;br /&gt;		{&lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; post &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; collections.projects &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;}&lt;br /&gt;			{&lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; post.data.project &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; project.projectName &lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;}&lt;br /&gt;				&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;li&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;br /&gt;					&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;a href&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&quot;{{ post.url }}&quot;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;{{ post.data.title }}&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;a&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;br /&gt;				&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;li&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;br /&gt;			{&lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;endif&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;}&lt;br /&gt;		{&lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;endfor&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;%&lt;/span&gt;}&lt;br /&gt;	&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;ul&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ok, it works!&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git commit -am &amp;quot;Project pages&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Ok, I&#39;m going to add a description for the overall project and make it available the same way. Looks good.&lt;/p&gt;
&lt;p&gt;I want to show tags in the sidebar/footer but the current layout isn&#39;t great. I&#39;ll have to add CSS to handle it.&lt;/p&gt;
&lt;p&gt;Ok, train ride is over!&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git commit -am &amp;quot;Finishing project pages&amp;quot;&lt;/code&gt;&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Hello World Devblog - Pt. 14</title>
    <link href="https://fightwithtools.dev/posts/projects/devblog/hello-day-14/"/>
    <updated>2021-07-24T02:59:43Z</updated>
    <id>https://fightwithtools.dev/posts/projects/devblog/hello-day-14/</id>
    <content type="html">&lt;ol&gt;
&lt;li&gt;Static Site Generator that can build the blog and let me host it on Github Pages&lt;/li&gt;
&lt;li&gt;I want to write posts in Markdown because I&#39;m lazy, it&#39;s easy, and it is how I take notes now.&lt;/li&gt;
&lt;li&gt;I don&#39;t want to spend a ton of time doing design work. I&#39;m doing complicated designs for other projects, so I want to pull a theme I like that I can rely on someone else to keep up.&lt;/li&gt;
&lt;li&gt;Once it gets going, I want template changes to be easy.&lt;/li&gt;
&lt;li&gt;It should be as easy as Jekyll, so I need to be able to build it using GitHub Actions, where I can just commit a template change or Markdown file and away it goes. If I can&#39;t figure this out than fk it, just use Jekyll.&lt;/li&gt;
&lt;li&gt;I require it to be used by a significant percent of my professional peers so I can get easy answers when something goes wrong.&lt;/li&gt;
&lt;li&gt;I want source maps. This is a dev log site which means whatever I do with it should be easy for other developers to read.&lt;/li&gt;
&lt;/ol&gt;
&lt;ul class=&quot;task-list&quot;&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; checked=&quot;true&quot; class=&quot;markdown-todo&quot; /&gt; Also &lt;a href=&quot;https://www.npmjs.com/package/@quasibit/eleventy-plugin-sitemap&quot; target=&quot;_blank&quot;&gt;the sitemap plugin&lt;/a&gt; looks cool. Should grab that later.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; So does the &lt;a href=&quot;https://www.npmjs.com/package/eleventy-plugin-reading-time&quot; target=&quot;_blank&quot;&gt;reading time one&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Also &lt;a href=&quot;https://github.com/jdsteinbach/eleventy-plugin-toc/&quot; target=&quot;_blank&quot;&gt;this TOC plugin&lt;/a&gt; mby?&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; checked=&quot;true&quot; class=&quot;markdown-todo&quot; /&gt; Use &lt;a href=&quot;https://www.11ty.dev/docs/data-deep-merge/&quot; target=&quot;_blank&quot;&gt;Data Deep Merge&lt;/a&gt; in this blog.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Decide if I want to render the CSS fancier than just a base file and do per-template splitting.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;s&gt;
&lt;ul class=&quot;task-list&quot;&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Can I use the template inside of dinky that already exists instead of copy/pasting it?&lt;/li&gt;
&lt;/ul&gt;
&lt;/s&gt;
&lt;ul class=&quot;task-list&quot;&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Is there a way to have permalinks to posts contain metadata without organizing them into subfolders?&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; checked=&quot;true&quot; class=&quot;markdown-todo&quot; /&gt; How do I cachebreak files on the basis of new build events? Datetime? &lt;code&gt;site.github.build_revision&lt;/code&gt; is &lt;a href=&quot;https://github.com/jekyll/github-metadata/blob/master/docs/site.github.md&quot; target=&quot;_blank&quot;&gt;how Jekyll accomplishes this&lt;/a&gt;, but is there a way to push &lt;a href=&quot;https://docs.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#github-context&quot; target=&quot;_blank&quot;&gt;that&lt;/a&gt; &lt;a href=&quot;https://stackoverflow.com/questions/54310050/how-to-version-build-artifacts-using-github-actions&quot; target=&quot;_blank&quot;&gt;into the build process&lt;/a&gt; for 11ty?&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; checked=&quot;true&quot; class=&quot;markdown-todo&quot; /&gt; Make link text look less shitty. It looks like it is a whole, lighter, font.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; checked=&quot;true&quot; class=&quot;markdown-todo&quot; /&gt; Code blocks do not have good syntax highlighting. I want good syntax highlighting.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Build a Markdown-it plugin to take my typing shortcuts &lt;code&gt;[prob, b/c, ...?]&lt;/code&gt; and expand them on build.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; See if we can start Markdown&#39;s interpretation of H tags to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements#multiple_h1&quot; target=&quot;_blank&quot;&gt;start at 2, since H1&lt;/a&gt; is always pulled from the page title metadata. If it isn&#39;t easy, I just have to change my pattern of writing in the MD documents.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Should I &lt;a href=&quot;https://www.madebymike.com.au/writing/11ty-filters-data-shortcodes/&quot; target=&quot;_blank&quot;&gt;explore some shortcodes&lt;/a&gt;?&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Day-14&quot; tabindex=&quot;-1&quot;&gt;Day 14&lt;/h2&gt;
&lt;p&gt;Ok, let&#39;s work though making these vertical pages a little more functional. We&#39;ll start with the home page. I want to have links to the project pages, so I&#39;m going to need to build a URL for those. To do that I think I&#39;ll need to place it into my &lt;code&gt;projects&lt;/code&gt; object. I can use the same technique of environment variables I set up for the feeds to have proper absolute links here.&lt;/p&gt;
&lt;p&gt;I&#39;ll add this to &lt;code&gt;project.js&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;url: (function(){ return process.env.DOMAIN + &amp;quot;/projects/&amp;quot; + projectDir })(),&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Then I can use this data property to build the template links that go out to the project pages.&lt;/p&gt;
&lt;p&gt;I don&#39;t like the lack of headers, I&#39;ll add an &lt;code&gt;hlevel&lt;/code&gt; argument to my shortcode to allow me to set headers on each post list.&lt;/p&gt;
&lt;p&gt;Good list headers now! Time to add links to the other post lists. I also want to format the post titles with the project name. To do that I&#39;m going to create another shortcode that formats the post titles a little differently.&lt;/p&gt;
&lt;p&gt;This also seems like a good time to move my posts over to the right folder.&lt;/p&gt;
&lt;p&gt;Ok, adding the site name to the non-index pages and now its time to do some css.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git commit -am &amp;quot;Done with setting up vertical content, on to vertical styles.&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Ok, to get the layouts the way I want while still having the base template be very reusable, I need to have some custom CSS that applies only to specific pages. I can handle that by adding an ID with the template name to the &lt;code&gt;body&lt;/code&gt; HTML tag. That&#39;s easy. But I don&#39;t want to load down the CSS file with these file specific rules where I don&#39;t need them. So let&#39;s accomplish one of my early goals and split the CSS into smaller files.&lt;/p&gt;
&lt;ul class=&quot;task-list&quot;&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; checked=&quot;true&quot; class=&quot;markdown-todo&quot; /&gt; Decide if I want to render the CSS fancier than just a base file and do per-template splitting.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;git commit -am &amp;quot;Set up SASS &amp;gt; CSS Code spliting with template selection&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Very annoying that SASS changes don&#39;t cause a watch trigger. I&#39;ll need to handle that.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;eleventyConfig.addWatchTarget(&amp;quot;./src/_sass&amp;quot;);&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Ok. It&#39;s looking good now. A basic grid layout that can fit inside the 650px wide main body. I&#39;ll need to add some media queries too, but it&#39;s the direction I want to go.&lt;/p&gt;
&lt;p&gt;Dinner time!&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git commit -am &amp;quot;Add front page styles&amp;quot;&lt;/code&gt;&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Hello World Devblog - Pt. 15</title>
    <link href="https://fightwithtools.dev/posts/projects/devblog/hello-day-15/"/>
    <updated>2021-07-25T02:59:43Z</updated>
    <id>https://fightwithtools.dev/posts/projects/devblog/hello-day-15/</id>
    <content type="html">&lt;ol&gt;
&lt;li&gt;Static Site Generator that can build the blog and let me host it on Github Pages&lt;/li&gt;
&lt;li&gt;I want to write posts in Markdown because I&#39;m lazy, it&#39;s easy, and it is how I take notes now.&lt;/li&gt;
&lt;li&gt;I don&#39;t want to spend a ton of time doing design work. I&#39;m doing complicated designs for other projects, so I want to pull a theme I like that I can rely on someone else to keep up.&lt;/li&gt;
&lt;li&gt;Once it gets going, I want template changes to be easy.&lt;/li&gt;
&lt;li&gt;It should be as easy as Jekyll, so I need to be able to build it using GitHub Actions, where I can just commit a template change or Markdown file and away it goes. If I can&#39;t figure this out than fk it, just use Jekyll.&lt;/li&gt;
&lt;li&gt;I require it to be used by a significant percent of my professional peers so I can get easy answers when something goes wrong.&lt;/li&gt;
&lt;li&gt;I want source maps. This is a dev log site which means whatever I do with it should be easy for other developers to read.&lt;/li&gt;
&lt;/ol&gt;
&lt;ul class=&quot;task-list&quot;&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; checked=&quot;true&quot; class=&quot;markdown-todo&quot; /&gt; Also &lt;a href=&quot;https://www.npmjs.com/package/@quasibit/eleventy-plugin-sitemap&quot; target=&quot;_blank&quot;&gt;the sitemap plugin&lt;/a&gt; looks cool. Should grab that later.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; So does the &lt;a href=&quot;https://www.npmjs.com/package/eleventy-plugin-reading-time&quot; target=&quot;_blank&quot;&gt;reading time one&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Also &lt;a href=&quot;https://github.com/jdsteinbach/eleventy-plugin-toc/&quot; target=&quot;_blank&quot;&gt;this TOC plugin&lt;/a&gt; mby?&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; checked=&quot;true&quot; class=&quot;markdown-todo&quot; /&gt; Use &lt;a href=&quot;https://www.11ty.dev/docs/data-deep-merge/&quot; target=&quot;_blank&quot;&gt;Data Deep Merge&lt;/a&gt; in this blog.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; checked=&quot;true&quot; class=&quot;markdown-todo&quot; /&gt; Decide if I want to render the CSS fancier than just a base file and do per-template splitting.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;s&gt;
&lt;ul class=&quot;task-list&quot;&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Can I use the template inside of dinky that already exists instead of copy/pasting it?&lt;/li&gt;
&lt;/ul&gt;
&lt;/s&gt;
&lt;ul class=&quot;task-list&quot;&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Is there a way to have permalinks to posts contain metadata without organizing them into subfolders?&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; checked=&quot;true&quot; class=&quot;markdown-todo&quot; /&gt; How do I cachebreak files on the basis of new build events? Datetime? &lt;code&gt;site.github.build_revision&lt;/code&gt; is &lt;a href=&quot;https://github.com/jekyll/github-metadata/blob/master/docs/site.github.md&quot; target=&quot;_blank&quot;&gt;how Jekyll accomplishes this&lt;/a&gt;, but is there a way to push &lt;a href=&quot;https://docs.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#github-context&quot; target=&quot;_blank&quot;&gt;that&lt;/a&gt; &lt;a href=&quot;https://stackoverflow.com/questions/54310050/how-to-version-build-artifacts-using-github-actions&quot; target=&quot;_blank&quot;&gt;into the build process&lt;/a&gt; for 11ty?&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; checked=&quot;true&quot; class=&quot;markdown-todo&quot; /&gt; Make link text look less shitty. It looks like it is a whole, lighter, font.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; checked=&quot;true&quot; class=&quot;markdown-todo&quot; /&gt; Code blocks do not have good syntax highlighting. I want good syntax highlighting.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Build a Markdown-it plugin to take my typing shortcuts &lt;code&gt;[prob, b/c, ...?]&lt;/code&gt; and expand them on build.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; See if we can start Markdown&#39;s interpretation of H tags to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements#multiple_h1&quot; target=&quot;_blank&quot;&gt;start at 2, since H1&lt;/a&gt; is always pulled from the page title metadata. If it isn&#39;t easy, I just have to change my pattern of writing in the MD documents.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Should I &lt;a href=&quot;https://www.madebymike.com.au/writing/11ty-filters-data-shortcodes/&quot; target=&quot;_blank&quot;&gt;explore some shortcodes&lt;/a&gt;?&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Day-15&quot; tabindex=&quot;-1&quot;&gt;Day 15&lt;/h2&gt;
&lt;p&gt;Ok, let&#39;s add a little styling to handle mobile devices. Looking at the sizes the changes happen and also when the lines tend to start to break, I think I want a custom break point for the frontpage grid.&lt;/p&gt;
&lt;p&gt;I&#39;ll put &lt;code&gt;$mobile-width: 890px&lt;/code&gt; at the top of my stylesheet and set the width there. Then I can reuse it on per-unit queries like:&lt;/p&gt;
&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;        @media &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token property&quot;&gt;max-width&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; $mobile-width&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;            &lt;span class=&quot;token property&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; block&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ok, I want to set a link to the home page on every page. I started with a query to check for &lt;code&gt;/posts&lt;/code&gt; and &lt;code&gt;/projects&lt;/code&gt; in the base template. But I don&#39;t like how it looks if it is below the main content of the header. Let&#39;s switch up the design.&lt;/p&gt;
&lt;p&gt;Ok, that&#39;s looking better. But I want the title of the page to span longer then it does now.&lt;/p&gt;
&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;@media print&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; screen and &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token property&quot;&gt;max-width&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; $large-mobile&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;    header&lt;br /&gt;        &lt;span class=&quot;token property&quot;&gt;padding-right&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 260px&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Hm. That&#39;s not working.&lt;/p&gt;
&lt;p&gt;I&#39;ll come back to it in a second. I want to get a breadcrumb path working, but there&#39;s no way to split the URL at the build process, at least not one that I can see that&#39;s built in. I guess the answer is a filter I can run the URL through.&lt;/p&gt;
&lt;p&gt;To manipulate chunks of the URL I am going to have to turn the URL into an array and manipulate it, along with handling the domain env variable.&lt;/p&gt;
&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;	eleventyConfig&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addFilter&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;relproject&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;		&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; urlArray &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; url&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;/&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;		&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; urlFiltered &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; urlArray&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;e&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; e&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length &lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;		urlFiltered&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// Remove post path&lt;/span&gt;&lt;br /&gt;		urlFiltered&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;shift&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// Remove `posts/`&lt;/span&gt;&lt;br /&gt;		&lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; process&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;env&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;DOMAIN&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;/&#39;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; urlFiltered&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;/&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;	  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now I can use it in a template tag like this:&lt;/p&gt;
&lt;pre class=&quot;language-liquid&quot;&gt;&lt;code class=&quot;language-liquid&quot;&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;a id&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&quot;project&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;link&quot; href&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&quot;{{ page.url &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; relproject }}&quot;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;{{project}}&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;a&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ok, back to SaaS. What&#39;s going on there?&lt;/p&gt;
&lt;p&gt;Oops, forgot to give it a &lt;code&gt;px&lt;/code&gt; for the unit type.&lt;/p&gt;
&lt;p&gt;Ok. That works now.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git commit -am &amp;quot;Set up changes to styles and add some additional elements to the design&amp;quot;&lt;/code&gt;&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Hello World Devblog - Pt. 16</title>
    <link href="https://fightwithtools.dev/posts/projects/devblog/hello-day-16/"/>
    <updated>2021-07-26T02:59:43Z</updated>
    <id>https://fightwithtools.dev/posts/projects/devblog/hello-day-16/</id>
    <content type="html">&lt;ol&gt;
&lt;li&gt;Static Site Generator that can build the blog and let me host it on Github Pages&lt;/li&gt;
&lt;li&gt;I want to write posts in Markdown because I&#39;m lazy, it&#39;s easy, and it is how I take notes now.&lt;/li&gt;
&lt;li&gt;I don&#39;t want to spend a ton of time doing design work. I&#39;m doing complicated designs for other projects, so I want to pull a theme I like that I can rely on someone else to keep up.&lt;/li&gt;
&lt;li&gt;Once it gets going, I want template changes to be easy.&lt;/li&gt;
&lt;li&gt;It should be as easy as Jekyll, so I need to be able to build it using GitHub Actions, where I can just commit a template change or Markdown file and away it goes. If I can&#39;t figure this out than fk it, just use Jekyll.&lt;/li&gt;
&lt;li&gt;I require it to be used by a significant percent of my professional peers so I can get easy answers when something goes wrong.&lt;/li&gt;
&lt;li&gt;I want source maps. This is a dev log site which means whatever I do with it should be easy for other developers to read.&lt;/li&gt;
&lt;/ol&gt;
&lt;ul class=&quot;task-list&quot;&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; checked=&quot;true&quot; class=&quot;markdown-todo&quot; /&gt; Also &lt;a href=&quot;https://www.npmjs.com/package/@quasibit/eleventy-plugin-sitemap&quot; target=&quot;_blank&quot;&gt;the sitemap plugin&lt;/a&gt; looks cool. Should grab that later.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; So does the &lt;a href=&quot;https://www.npmjs.com/package/eleventy-plugin-reading-time&quot; target=&quot;_blank&quot;&gt;reading time one&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Also &lt;a href=&quot;https://github.com/jdsteinbach/eleventy-plugin-toc/&quot; target=&quot;_blank&quot;&gt;this TOC plugin&lt;/a&gt; mby?&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; checked=&quot;true&quot; class=&quot;markdown-todo&quot; /&gt; Use &lt;a href=&quot;https://www.11ty.dev/docs/data-deep-merge/&quot; target=&quot;_blank&quot;&gt;Data Deep Merge&lt;/a&gt; in this blog.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; checked=&quot;true&quot; class=&quot;markdown-todo&quot; /&gt; Decide if I want to render the CSS fancier than just a base file and do per-template splitting.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;s&gt;
&lt;ul class=&quot;task-list&quot;&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Can I use the template inside of dinky that already exists instead of copy/pasting it?&lt;/li&gt;
&lt;/ul&gt;
&lt;/s&gt;
&lt;ul class=&quot;task-list&quot;&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Is there a way to have permalinks to posts contain metadata without organizing them into subfolders?&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; checked=&quot;true&quot; class=&quot;markdown-todo&quot; /&gt; How do I cachebreak files on the basis of new build events? Datetime? &lt;code&gt;site.github.build_revision&lt;/code&gt; is &lt;a href=&quot;https://github.com/jekyll/github-metadata/blob/master/docs/site.github.md&quot; target=&quot;_blank&quot;&gt;how Jekyll accomplishes this&lt;/a&gt;, but is there a way to push &lt;a href=&quot;https://docs.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#github-context&quot; target=&quot;_blank&quot;&gt;that&lt;/a&gt; &lt;a href=&quot;https://stackoverflow.com/questions/54310050/how-to-version-build-artifacts-using-github-actions&quot; target=&quot;_blank&quot;&gt;into the build process&lt;/a&gt; for 11ty?&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; checked=&quot;true&quot; class=&quot;markdown-todo&quot; /&gt; Make link text look less shitty. It looks like it is a whole, lighter, font.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; checked=&quot;true&quot; class=&quot;markdown-todo&quot; /&gt; Code blocks do not have good syntax highlighting. I want good syntax highlighting.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Build a Markdown-it plugin to take my typing shortcuts &lt;code&gt;[prob, b/c, ...?]&lt;/code&gt; and expand them on build.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; See if we can start Markdown&#39;s interpretation of H tags to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements#multiple_h1&quot; target=&quot;_blank&quot;&gt;start at 2, since H1&lt;/a&gt; is always pulled from the page title metadata. If it isn&#39;t easy, I just have to change my pattern of writing in the MD documents.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Should I &lt;a href=&quot;https://www.madebymike.com.au/writing/11ty-filters-data-shortcodes/&quot; target=&quot;_blank&quot;&gt;explore some shortcodes&lt;/a&gt;?&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Day-16&quot; tabindex=&quot;-1&quot;&gt;Day 16&lt;/h2&gt;
&lt;p&gt;Ok, so I&#39;d like to continue using my shortcuts like &lt;code&gt;b/c&lt;/code&gt; or &lt;code&gt;prob&lt;/code&gt;. Seems like the way to go there is to set it up as a markdown-it shortcode. I&#39;d like to try my hand at that.&lt;/p&gt;
&lt;p&gt;We can take a look at &lt;a href=&quot;https://github.com/markdown-it/markdown-it#api&quot; target=&quot;_blank&quot;&gt;Markdown-it&#39;s documentation&lt;/a&gt; for help here.&lt;/p&gt;
&lt;p&gt;Oh, README says this is the wrong place to look at for plugins. Ok.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/markdown-it/markdown-it/tree/master/docs&quot; target=&quot;_blank&quot;&gt;Info for plugin developers&lt;/a&gt;... ok, two links in here.&lt;/p&gt;
&lt;p&gt;Ok... I&#39;m not sure how useful these are. The douments are nice for understanding the philosophy involved. But not great to kick me off. Ok, &lt;a href=&quot;https://github.com/markdown-it/markdown-it/blob/master/docs/development.md#general-considerations-for-plugins&quot; target=&quot;_blank&quot;&gt;let&#39;s take recommendation 2&lt;/a&gt; and look at some existing plugins. It sounds like I might possibly conflict with other plugins, so I prob should use an inline or block rule. That&#39;s useful.&lt;/p&gt;
&lt;p&gt;Oh, this looks useful and like a good idea, &lt;a href=&quot;https://www.npmjs.com/package/markdown-it-anchor&quot; target=&quot;_blank&quot;&gt;anchor links on my headers&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Let&#39;s try and pull it in along with a slugify method that can make for clear URLs.&lt;/p&gt;
&lt;p&gt;It recommends I use &lt;code&gt;&#39;@sindresorhus/slugify&#39;&lt;/code&gt; or &lt;code&gt;string&lt;/code&gt; to handle the slugify process. The 2nd is basic, but the first doesn&#39;t work well with how I structured this project. (It requires being called from a module, and my project isn&#39;t set up that way.) So, I&#39;ll use &lt;code&gt;slugify&lt;/code&gt; which I have used in other projects in the past.&lt;/p&gt;
&lt;p&gt;Ok, that worked!&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git commit -am &amp;quot;Add anchors to headers&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Oh, there are some good looking markdown-it plugins here. I&#39;m going to install &lt;a href=&quot;https://www.npmjs.com/package/@gerhobbelt/markdown-it-footnote&quot; target=&quot;_blank&quot;&gt;the footnote one&lt;/a&gt; as well. Oh that didn&#39;t work. I&#39;ll try &lt;a href=&quot;https://github.com/markdown-it/markdown-it-footnote&quot; target=&quot;_blank&quot;&gt;the base one instead&lt;/a&gt; in a little bit.&lt;/p&gt;
&lt;p&gt;Ok... What&#39;s a basic looking plugin I can look at easily as an example? The &lt;a href=&quot;https://github.com/kwvanderlinde/markdown-it-wikilinks/blob/master/index.js&quot; target=&quot;_blank&quot;&gt;Wikilinks plugin&lt;/a&gt; looks good.&lt;/p&gt;
&lt;p&gt;Ok so... no particular described format and I don&#39;t feel like digging through the markdown-it code to figure out how these plugins are supposed to work. Not the most developer friendly library I guess.&lt;/p&gt;
&lt;p&gt;Ok, to facilitate a similar structure, I&#39;ll take the Wikilinks plugin and place it in my own folder under &lt;code&gt;_custom-plugins&lt;/code&gt;. I&#39;m not going to be taking in options right now, so I can remove that stuff from the plugin.&lt;/p&gt;
&lt;p&gt;The plugin looks like it is very dependent on a modules called &lt;code&gt;markdown-it-regexp&lt;/code&gt;. So let&#39;s &lt;a href=&quot;https://github.com/rlidwka/markdown-it-regexp&quot; target=&quot;_blank&quot;&gt;check out how that works&lt;/a&gt;. It &lt;a href=&quot;https://github.com/rlidwka/markdown-it-regexp/blob/master/lib/index.js#L61&quot; target=&quot;_blank&quot;&gt;looks like it handles regex rules and does the work of registering those rules&lt;/a&gt; with the Markdown-it rules manager called &lt;code&gt;ruler&lt;/code&gt;. It seems to take two arguments, a regex pattern and a function to run on that regex pattern. All this seems relatively straightforward, which makes me feel a lot better about using a library that doesn&#39;t seem to have had any activity since 2016.&lt;/p&gt;
&lt;p&gt;I have to admit, I&#39;m not super thrilled with Markdown-it. &lt;a href=&quot;https://glitch.com/edit/#!/thespin?path=markdown-to-col.js%3A1%3A0&quot; target=&quot;_blank&quot;&gt;Normally I use&lt;/a&gt; &lt;a href=&quot;https://www.npmjs.com/package/showdown&quot; target=&quot;_blank&quot;&gt;Showdown&lt;/a&gt; for Markdown parsing, but a lot of the Eleventy docs push Markdown-it. I guess I&#39;ll stick with it for now, but I&#39;m not sure I&#39;d recommend it or use it in a future project.&lt;/p&gt;
&lt;p&gt;Ok, let&#39;s strip it down to the basics.&lt;/p&gt;
&lt;p&gt;First my regex, I want to replace my use of &lt;code&gt;prob&lt;/code&gt; with &lt;code&gt;probably&lt;/code&gt;. So easy enough, gotta surround it with spaces. &lt;code&gt;/\sprob\s/&lt;/code&gt; is a start. But it looks from the example that I should also have a capture group. Ok so instead I&#39;ll make it &lt;code&gt;/\s(prob)\s/,&lt;/code&gt; Let&#39;s assume I&#39;ll eventually have a bunch of patterns, so I need to check to see that the pattern is giving me back one of a set of specific patterns. Then I can apply my specific transform.&lt;/p&gt;
&lt;p&gt;Hmmm it should work now, but I&#39;m not seeing any results. I tried adding a console.log, but still nothing.&lt;/p&gt;
&lt;p&gt;Oh, oops, the pattern I&#39;m using from the Wikilinks plugin, &lt;a href=&quot;https://github.com/kwvanderlinde/markdown-it-wikilinks#usage&quot; target=&quot;_blank&quot;&gt;means I have to execute it as a function first&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Hmmmm. Still no go. Is the plugin even initiating? Let&#39;s put a console.log outside of the return statement and see.&lt;/p&gt;
&lt;p&gt;Ok, the console.log outside of the return fired (once I exited watch mode and restarted it, I guess plugins don&#39;t get reloaded during &lt;code&gt;watch&lt;/code&gt; mode?). But it isn&#39;t treating my text?&lt;/p&gt;
&lt;p&gt;Ok, &lt;a href=&quot;https://jsfiddle.net/yd2gLxev/&quot; target=&quot;_blank&quot;&gt;the sample code&lt;/a&gt; given in the Readme of &lt;code&gt;markdown-it-regexp&lt;/code&gt; doesn&#39;t work. It&#39;s just failing silently. This isn&#39;t a good sign. But there seem to be more modern plugins using it fine? Ok, the issue seems to be with how the jsfiddle is setup. When I set it up in a Glitch site, it seems to work just fine.&lt;/p&gt;
&lt;p&gt;Ok, now I am even more annoyed that this isn&#39;t working. It should, by all rights. All I can think is that it must have something to do with the specific way eleventy implements Markdown-It?&lt;/p&gt;
&lt;p&gt;I tried returning the &lt;code&gt;Plugin&lt;/code&gt; function from &lt;code&gt;markdown-it-regexp&lt;/code&gt;. No go there either. Frustrating. Just none of this stuff is executing. I&#39;m starting to think that maybe this is a lost cause. It isn&#39;t working and I&#39;m wondering if I should &lt;a href=&quot;https://www.npmjs.com/package/markdown-it-regex&quot; target=&quot;_blank&quot;&gt;switch to trying out another option&lt;/a&gt;. Nothing but silent failures. Nothing is working.&lt;/p&gt;
&lt;p&gt;Ok, trying to use &lt;a href=&quot;https://www.npmjs.com/package/markdown-it-regex&quot; target=&quot;_blank&quot;&gt;markdown-it-regex&lt;/a&gt;. But it won&#39;t work either. I keep getting &lt;code&gt;plugin.apply is not a function&lt;/code&gt;. Which makes me think the problem with the last plugin might be showing up here, where the way the markdown-it tool is being applied by eleventy isn&#39;t normal or at least isn&#39;t what some of these plugin authors expect.&lt;/p&gt;
&lt;p&gt;Ok, nothing working here. Time to switch approaches. &lt;a href=&quot;https://docs.joshuatz.com/cheatsheets/node-and-npm/markdown-it/&quot; target=&quot;_blank&quot;&gt;This walkthrough looks like it might be promising&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git commit -am &amp;quot;Day 16 - I fail to write a Markdown-it plugin&amp;quot;&lt;/code&gt;&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Hello World Devblog - Pt. 17</title>
    <link href="https://fightwithtools.dev/posts/projects/devblog/hello-day-17/"/>
    <updated>2021-07-30T02:59:43Z</updated>
    <id>https://fightwithtools.dev/posts/projects/devblog/hello-day-17/</id>
    <content type="html">&lt;ol&gt;
&lt;li&gt;Static Site Generator that can build the blog and let me host it on Github Pages&lt;/li&gt;
&lt;li&gt;I want to write posts in Markdown because I&#39;m lazy, it&#39;s easy, and it is how I take notes now.&lt;/li&gt;
&lt;li&gt;I don&#39;t want to spend a ton of time doing design work. I&#39;m doing complicated designs for other projects, so I want to pull a theme I like that I can rely on someone else to keep up.&lt;/li&gt;
&lt;li&gt;Once it gets going, I want template changes to be easy.&lt;/li&gt;
&lt;li&gt;It should be as easy as Jekyll, so I need to be able to build it using GitHub Actions, where I can just commit a template change or Markdown file and away it goes. If I can&#39;t figure this out than fk it, just use Jekyll.&lt;/li&gt;
&lt;li&gt;I require it to be used by a significant percent of my professional peers so I can get easy answers when something goes wrong.&lt;/li&gt;
&lt;li&gt;I want source maps. This is a dev log site which means whatever I do with it should be easy for other developers to read.&lt;/li&gt;
&lt;/ol&gt;
&lt;ul class=&quot;task-list&quot;&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; checked=&quot;true&quot; class=&quot;markdown-todo&quot; /&gt; Also &lt;a href=&quot;https://www.npmjs.com/package/@quasibit/eleventy-plugin-sitemap&quot; target=&quot;_blank&quot;&gt;the sitemap plugin&lt;/a&gt; looks cool. Should grab that later.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; So does the &lt;a href=&quot;https://www.npmjs.com/package/eleventy-plugin-reading-time&quot; target=&quot;_blank&quot;&gt;reading time one&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Also &lt;a href=&quot;https://github.com/jdsteinbach/eleventy-plugin-toc/&quot; target=&quot;_blank&quot;&gt;this TOC plugin&lt;/a&gt; mby?&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; checked=&quot;true&quot; class=&quot;markdown-todo&quot; /&gt; Use &lt;a href=&quot;https://www.11ty.dev/docs/data-deep-merge/&quot; target=&quot;_blank&quot;&gt;Data Deep Merge&lt;/a&gt; in this blog.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; checked=&quot;true&quot; class=&quot;markdown-todo&quot; /&gt; Decide if I want to render the CSS fancier than just a base file and do per-template splitting.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;s&gt;
&lt;ul class=&quot;task-list&quot;&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Can I use the template inside of dinky that already exists instead of copy/pasting it?&lt;/li&gt;
&lt;/ul&gt;
&lt;/s&gt;
&lt;ul class=&quot;task-list&quot;&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Is there a way to have permalinks to posts contain metadata without organizing them into subfolders?&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; checked=&quot;true&quot; class=&quot;markdown-todo&quot; /&gt; How do I cachebreak files on the basis of new build events? Datetime? &lt;code&gt;site.github.build_revision&lt;/code&gt; is &lt;a href=&quot;https://github.com/jekyll/github-metadata/blob/master/docs/site.github.md&quot; target=&quot;_blank&quot;&gt;how Jekyll accomplishes this&lt;/a&gt;, but is there a way to push &lt;a href=&quot;https://docs.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#github-context&quot; target=&quot;_blank&quot;&gt;that&lt;/a&gt; &lt;a href=&quot;https://stackoverflow.com/questions/54310050/how-to-version-build-artifacts-using-github-actions&quot; target=&quot;_blank&quot;&gt;into the build process&lt;/a&gt; for 11ty?&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; checked=&quot;true&quot; class=&quot;markdown-todo&quot; /&gt; Make link text look less shitty. It looks like it is a whole, lighter, font.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; checked=&quot;true&quot; class=&quot;markdown-todo&quot; /&gt; Code blocks do not have good syntax highlighting. I want good syntax highlighting.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Build a Markdown-it plugin to take my typing shortcuts &lt;code&gt;[prob, b/c, ...?]&lt;/code&gt; and expand them on build.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; See if we can start Markdown&#39;s interpretation of H tags to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements#multiple_h1&quot; target=&quot;_blank&quot;&gt;start at 2, since H1&lt;/a&gt; is always pulled from the page title metadata. If it isn&#39;t easy, I just have to change my pattern of writing in the MD documents.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Should I &lt;a href=&quot;https://www.madebymike.com.au/writing/11ty-filters-data-shortcodes/&quot; target=&quot;_blank&quot;&gt;explore some shortcodes&lt;/a&gt;?&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Order projects listing by last posted blog in that project&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Limit the output of home page post lists to a specific number of posts&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Show the latest post below the site intro on the homepage.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Tags pages with Pagination&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Day-17&quot; tabindex=&quot;-1&quot;&gt;Day 17&lt;/h2&gt;
&lt;p&gt;So as of last time I checked out &lt;a href=&quot;https://docs.joshuatz.com/cheatsheets/node-and-npm/markdown-it/&quot; target=&quot;_blank&quot;&gt;this walkthrough&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It has a little more information for me to use than the Markdown-it documentation. It also recommended I check out one of the markdown-it plugins I was actually able to get working. &lt;a href=&quot;https://github.com/valeriangalliat/markdown-it-anchor/blob/HEAD/index.js&quot; target=&quot;_blank&quot;&gt;So let&#39;s do that&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Just looking at my homepage and realizing I need to add some to-dos:&lt;/p&gt;
&lt;ul class=&quot;task-list&quot;&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; checked=&quot;true&quot; class=&quot;markdown-todo&quot; /&gt; Order projects listing by last posted blog in that project&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; checked=&quot;true&quot; class=&quot;markdown-todo&quot; /&gt; Limit the output of home page post lists to a specific number of posts&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Show the latest post below the site intro on the homepage.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Tags pages with Pagination&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Posts should be able to support a preview header image that can also be shown on post lists.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Ok, let&#39;s take on projects by last updated. I guess this means another field to add to that projects object. I guess I&#39;ll start off by getting the front matter. I guess the first step is pulling in a markdown frontmatter processor.&lt;/p&gt;
&lt;p&gt;It looks &lt;a href=&quot;https://www.npmjs.com/package/markdown-it-front-matter&quot; target=&quot;_blank&quot;&gt;like &lt;code&gt;markdown-it&lt;/code&gt; doesn&#39;t ship with frontmatter parsing&lt;/a&gt;. &lt;a href=&quot;https://www.11ty.dev/docs/data-frontmatter/&quot; target=&quot;_blank&quot;&gt;Eleventy uses grey-matter to handle frontmatter&lt;/a&gt; so if I pull that package in it won&#39;t increase our NPM package footprint.&lt;/p&gt;
&lt;p&gt;Ok, so with that in hand, let&#39;s get the file content.&lt;/p&gt;
&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; readdirSync&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; readFileSync &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;fs&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; path &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;path&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; matter &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;gray-matter&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token comment&quot;&gt;// ...&lt;/span&gt;&lt;br /&gt;	&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; projectFilesContent &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; projectFiles&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;filePath&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;		&lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;readFileSync&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;			path&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;./src/posts/projects/&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;projectDir&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;filePath&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;br /&gt;		&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// Don&#39;t forget the `toString` part!&lt;/span&gt;&lt;br /&gt;	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Gotta remember to use &lt;code&gt;path&lt;/code&gt; in this because otherwise it just gives me the last portion of the path.&lt;/p&gt;
&lt;p&gt;Ok, so let&#39;s use grey-matter to pull out that data. Where on the object does it live? I&#39;m not getting anything yet.&lt;/p&gt;
&lt;p&gt;Ok, it&#39;s because the front-matter data lives on &lt;code&gt;object.data&lt;/code&gt; so my date is at &lt;code&gt;object.data.date&lt;/code&gt;. Cool. Ok, got it working now. I can use &lt;code&gt;Array.reduce&lt;/code&gt; here to figure out the most recent date.&lt;/p&gt;
&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;	lastUpdated &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; projectFilesContent&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;reduce&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;prevValue&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; fileContent&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;		&lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;			&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; mdObject &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;matter&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;fileContent&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;			&lt;span class=&quot;token comment&quot;&gt;// console.log(&quot;data&quot;, mdObject.data);&lt;/span&gt;&lt;br /&gt;			&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;mdObject&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;data &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;mdObject&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;date&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;				&lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;			&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;			&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; datetime &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Date&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;mdObject&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;date&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;			&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;prevValue &lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; datetime&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;				&lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; prevValue&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;			&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;				&lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; datetime&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;			&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;		&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;e&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;			console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Could not find date&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; e&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;			&lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;		&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;br /&gt;	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And then I can sort it.&lt;/p&gt;
&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;directorySet&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;sort&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;a&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; b&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; b&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;lastUpdatedPost &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; a&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;lastUpdatedPost&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Done!&lt;/p&gt;
&lt;p&gt;Ok, now I can limit the posts output on the homepage by adding a limit count ot the shortcode.&lt;/p&gt;
&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;	eleventyConfig&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addShortcode&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;br /&gt;		&lt;span class=&quot;token string&quot;&gt;&quot;projectList&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;		&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;collectionName&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; collectionOfPosts&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; order&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; hlevel&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; limit&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;		&lt;span class=&quot;token comment&quot;&gt;// ...&lt;/span&gt;&lt;br /&gt;			&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;collectionOfPosts &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; limit&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;				collectionOfPosts &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; collectionOfPosts&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;slice&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; limit&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;br /&gt;			&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Works!&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git commit -am &amp;quot;Improve homepage outputs and ordering!&amp;quot; &lt;/code&gt;&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Hello World Devblog - Pt. 18</title>
    <link href="https://fightwithtools.dev/posts/projects/devblog/hello-day-18/"/>
    <updated>2021-07-31T02:59:43Z</updated>
    <id>https://fightwithtools.dev/posts/projects/devblog/hello-day-18/</id>
    <content type="html">&lt;ol&gt;
&lt;li&gt;Static Site Generator that can build the blog and let me host it on Github Pages&lt;/li&gt;
&lt;li&gt;I want to write posts in Markdown because I&#39;m lazy, it&#39;s easy, and it is how I take notes now.&lt;/li&gt;
&lt;li&gt;I don&#39;t want to spend a ton of time doing design work. I&#39;m doing complicated designs for other projects, so I want to pull a theme I like that I can rely on someone else to keep up.&lt;/li&gt;
&lt;li&gt;Once it gets going, I want template changes to be easy.&lt;/li&gt;
&lt;li&gt;It should be as easy as Jekyll, so I need to be able to build it using GitHub Actions, where I can just commit a template change or Markdown file and away it goes. If I can&#39;t figure this out than fk it, just use Jekyll.&lt;/li&gt;
&lt;li&gt;I require it to be used by a significant percent of my professional peers so I can get easy answers when something goes wrong.&lt;/li&gt;
&lt;li&gt;I want source maps. This is a dev log site which means whatever I do with it should be easy for other developers to read.&lt;/li&gt;
&lt;/ol&gt;
&lt;ul class=&quot;task-list&quot;&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; checked=&quot;true&quot; class=&quot;markdown-todo&quot; /&gt; Also &lt;a href=&quot;https://www.npmjs.com/package/@quasibit/eleventy-plugin-sitemap&quot; target=&quot;_blank&quot;&gt;the sitemap plugin&lt;/a&gt; looks cool. Should grab that later.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; So does the &lt;a href=&quot;https://www.npmjs.com/package/eleventy-plugin-reading-time&quot; target=&quot;_blank&quot;&gt;reading time one&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Also &lt;a href=&quot;https://github.com/jdsteinbach/eleventy-plugin-toc/&quot; target=&quot;_blank&quot;&gt;this TOC plugin&lt;/a&gt; mby?&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; checked=&quot;true&quot; class=&quot;markdown-todo&quot; /&gt; Use &lt;a href=&quot;https://www.11ty.dev/docs/data-deep-merge/&quot; target=&quot;_blank&quot;&gt;Data Deep Merge&lt;/a&gt; in this blog.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; checked=&quot;true&quot; class=&quot;markdown-todo&quot; /&gt; Decide if I want to render the CSS fancier than just a base file and do per-template splitting.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;s&gt;
&lt;ul class=&quot;task-list&quot;&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Can I use the template inside of dinky that already exists instead of copy/pasting it?&lt;/li&gt;
&lt;/ul&gt;
&lt;/s&gt;
&lt;ul class=&quot;task-list&quot;&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Is there a way to have permalinks to posts contain metadata without organizing them into subfolders?&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; checked=&quot;true&quot; class=&quot;markdown-todo&quot; /&gt; How do I cachebreak files on the basis of new build events? Datetime? &lt;code&gt;site.github.build_revision&lt;/code&gt; is &lt;a href=&quot;https://github.com/jekyll/github-metadata/blob/master/docs/site.github.md&quot; target=&quot;_blank&quot;&gt;how Jekyll accomplishes this&lt;/a&gt;, but is there a way to push &lt;a href=&quot;https://docs.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#github-context&quot; target=&quot;_blank&quot;&gt;that&lt;/a&gt; &lt;a href=&quot;https://stackoverflow.com/questions/54310050/how-to-version-build-artifacts-using-github-actions&quot; target=&quot;_blank&quot;&gt;into the build process&lt;/a&gt; for 11ty?&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; checked=&quot;true&quot; class=&quot;markdown-todo&quot; /&gt; Make link text look less shitty. It looks like it is a whole, lighter, font.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; checked=&quot;true&quot; class=&quot;markdown-todo&quot; /&gt; Code blocks do not have good syntax highlighting. I want good syntax highlighting.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Build a Markdown-it plugin to take my typing shortcuts &lt;code&gt;[prob, b/c, ...?]&lt;/code&gt; and expand them on build.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; See if we can start Markdown&#39;s interpretation of H tags to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements#multiple_h1&quot; target=&quot;_blank&quot;&gt;start at 2, since H1&lt;/a&gt; is always pulled from the page title metadata. If it isn&#39;t easy, I just have to change my pattern of writing in the MD documents.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Should I &lt;a href=&quot;https://www.madebymike.com.au/writing/11ty-filters-data-shortcodes/&quot; target=&quot;_blank&quot;&gt;explore some shortcodes&lt;/a&gt;?&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; checked=&quot;true&quot; class=&quot;markdown-todo&quot; /&gt; Order projects listing by last posted blog in that project&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; checked=&quot;true&quot; class=&quot;markdown-todo&quot; /&gt; Limit the output of home page post lists to a specific number of posts&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Show the latest post below the site intro on the homepage.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Tags pages with Pagination&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Posts should be able to support a preview header image that can also be shown on post lists.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Day-18&quot; tabindex=&quot;-1&quot;&gt;Day 18&lt;/h2&gt;
&lt;p&gt;Ok, I&#39;m still disappointed with markdown-it. So let&#39;s take on a different task today. I&#39;m going to take on showing the latest post and the tags pages, if I can pull off both.&lt;/p&gt;
&lt;p&gt;For the home page, it looks like &lt;a href=&quot;https://stackoverflow.com/questions/64337175/get-latest-post-to-show-on-home-page-with-eleventy&quot; target=&quot;_blank&quot;&gt;I can pull a good example&lt;/a&gt;. It is dependent on &lt;a href=&quot;https://github.com/11ty/eleventy-base-blog/blob/1be6346bde9ebe4afc23d7feaf0370817ad90f15/.eleventy.js#L31&quot; target=&quot;_blank&quot;&gt;a filter&lt;/a&gt; though. Oh this idea, to truncate an array with a filter, is really cool. I wish I hard realized it existed before I set up the limit number on the collection. But I&#39;ll pull it over. That said, I prefer to name it what it actually does and call it &lt;code&gt;slice&lt;/code&gt;. Ok, now I can have a single post on the homepage. But I don&#39;t really want the whole thing. Time to use the &amp;quot;description&amp;quot; metadata key and value. I&#39;ll need it for SEO anyway, so good to have something else on the site that uses the value. I want to have a good separator in place to differentiate the post content. I can add an &lt;code&gt;hr&lt;/code&gt;, but it will need some custom styling.&lt;/p&gt;
&lt;p&gt;I&#39;ll use my index-specific Sass here.&lt;/p&gt;
&lt;pre class=&quot;language-css&quot;&gt;&lt;code class=&quot;language-css&quot;&gt;    .front-post&lt;br /&gt;        hr&lt;br /&gt;            &lt;span class=&quot;token property&quot;&gt;margin-bottom&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 6px&lt;br /&gt;        h3&lt;br /&gt;            &lt;span class=&quot;token property&quot;&gt;margin-top&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; 2px&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ok, on to the tag pages.&lt;/p&gt;
&lt;p&gt;I&#39;ll start by duplicating the projects page. Now the question is how to get a list of collections.&lt;/p&gt;
&lt;p&gt;There doesn&#39;t seem to be a native way, but &lt;a href=&quot;https://github.com/11ty/eleventy-base-blog/blob/1be6346bde9ebe4afc23d7feaf0370817ad90f15/.eleventy.js#L47&quot; target=&quot;_blank&quot;&gt;I can build on the techniques that the 11ty site itself uses&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Ok, what does that create exactly? According to &lt;code&gt;console.log&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token string&quot;&gt;&#39;projects&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token string&quot;&gt;&#39;Starters&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token string&quot;&gt;&#39;11ty&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token string&quot;&gt;&#39;Node&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token string&quot;&gt;&#39;Sass&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token string&quot;&gt;&#39;WiP&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;  &lt;span class=&quot;token string&quot;&gt;&#39;Github Actions&#39;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ok and from there I can base the new page off &lt;a href=&quot;https://www.11ty.dev/docs/pagination/#paging-a-collection&quot; target=&quot;_blank&quot;&gt;the example from the eleventy site&lt;/a&gt;. It worked! Now I have a set of pages.&lt;/p&gt;
&lt;p&gt;I can use my postList shortcode here to get a list of posts. Just have to update it so the posts are linked.&lt;/p&gt;
&lt;p&gt;This is a good start, next step is paginating these tag pages!&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git commit -am &amp;quot;Setting up homepage post and tag pages&amp;quot;&lt;/code&gt;&lt;/p&gt;
</content>
  </entry>
  
  <entry>
    <title>Hello World Devblog - Pt. 19</title>
    <link href="https://fightwithtools.dev/posts/projects/devblog/hello-day-19/"/>
    <updated>2021-08-01T02:59:43Z</updated>
    <id>https://fightwithtools.dev/posts/projects/devblog/hello-day-19/</id>
    <content type="html">&lt;ol&gt;
&lt;li&gt;Static Site Generator that can build the blog and let me host it on Github Pages&lt;/li&gt;
&lt;li&gt;I want to write posts in Markdown because I&#39;m lazy, it&#39;s easy, and it is how I take notes now.&lt;/li&gt;
&lt;li&gt;I don&#39;t want to spend a ton of time doing design work. I&#39;m doing complicated designs for other projects, so I want to pull a theme I like that I can rely on someone else to keep up.&lt;/li&gt;
&lt;li&gt;Once it gets going, I want template changes to be easy.&lt;/li&gt;
&lt;li&gt;It should be as easy as Jekyll, so I need to be able to build it using GitHub Actions, where I can just commit a template change or Markdown file and away it goes. If I can&#39;t figure this out than fk it, just use Jekyll.&lt;/li&gt;
&lt;li&gt;I require it to be used by a significant percent of my professional peers so I can get easy answers when something goes wrong.&lt;/li&gt;
&lt;li&gt;I want source maps. This is a dev log site which means whatever I do with it should be easy for other developers to read.&lt;/li&gt;
&lt;/ol&gt;
&lt;ul class=&quot;task-list&quot;&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; checked=&quot;true&quot; class=&quot;markdown-todo&quot; /&gt; Also &lt;a href=&quot;https://www.npmjs.com/package/@quasibit/eleventy-plugin-sitemap&quot; target=&quot;_blank&quot;&gt;the sitemap plugin&lt;/a&gt; looks cool. Should grab that later.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; So does the &lt;a href=&quot;https://www.npmjs.com/package/eleventy-plugin-reading-time&quot; target=&quot;_blank&quot;&gt;reading time one&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Also &lt;a href=&quot;https://github.com/jdsteinbach/eleventy-plugin-toc/&quot; target=&quot;_blank&quot;&gt;this TOC plugin&lt;/a&gt; mby?&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; checked=&quot;true&quot; class=&quot;markdown-todo&quot; /&gt; Use &lt;a href=&quot;https://www.11ty.dev/docs/data-deep-merge/&quot; target=&quot;_blank&quot;&gt;Data Deep Merge&lt;/a&gt; in this blog.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; checked=&quot;true&quot; class=&quot;markdown-todo&quot; /&gt; Decide if I want to render the CSS fancier than just a base file and do per-template splitting.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;s&gt;
&lt;ul class=&quot;task-list&quot;&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Can I use the template inside of dinky that already exists instead of copy/pasting it?&lt;/li&gt;
&lt;/ul&gt;
&lt;/s&gt;
&lt;ul class=&quot;task-list&quot;&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Is there a way to have permalinks to posts contain metadata without organizing them into subfolders?&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; checked=&quot;true&quot; class=&quot;markdown-todo&quot; /&gt; How do I cachebreak files on the basis of new build events? Datetime? &lt;code&gt;site.github.build_revision&lt;/code&gt; is &lt;a href=&quot;https://github.com/jekyll/github-metadata/blob/master/docs/site.github.md&quot; target=&quot;_blank&quot;&gt;how Jekyll accomplishes this&lt;/a&gt;, but is there a way to push &lt;a href=&quot;https://docs.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#github-context&quot; target=&quot;_blank&quot;&gt;that&lt;/a&gt; &lt;a href=&quot;https://stackoverflow.com/questions/54310050/how-to-version-build-artifacts-using-github-actions&quot; target=&quot;_blank&quot;&gt;into the build process&lt;/a&gt; for 11ty?&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; checked=&quot;true&quot; class=&quot;markdown-todo&quot; /&gt; Make link text look less shitty. It looks like it is a whole, lighter, font.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; checked=&quot;true&quot; class=&quot;markdown-todo&quot; /&gt; Code blocks do not have good syntax highlighting. I want good syntax highlighting.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Build a Markdown-it plugin to take my typing shortcuts &lt;code&gt;[prob, b/c, ...?]&lt;/code&gt; and expand them on build.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; See if we can start Markdown&#39;s interpretation of H tags to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements#multiple_h1&quot; target=&quot;_blank&quot;&gt;start at 2, since H1&lt;/a&gt; is always pulled from the page title metadata. If it isn&#39;t easy, I just have to change my pattern of writing in the MD documents.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Should I &lt;a href=&quot;https://www.madebymike.com.au/writing/11ty-filters-data-shortcodes/&quot; target=&quot;_blank&quot;&gt;explore some shortcodes&lt;/a&gt;?&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; checked=&quot;true&quot; class=&quot;markdown-todo&quot; /&gt; Order projects listing by last posted blog in that project&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; checked=&quot;true&quot; class=&quot;markdown-todo&quot; /&gt; Limit the output of home page post lists to a specific number of posts&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Show the latest post below the site intro on the homepage.&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Tags pages with Pagination&lt;/p&gt;
&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;
&lt;p&gt;&lt;input disabled=&quot;true&quot; type=&quot;checkbox&quot; class=&quot;markdown-todo&quot; /&gt; Posts should be able to support a preview header image that can also be shown on post lists.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Day-19&quot; tabindex=&quot;-1&quot;&gt;Day 19&lt;/h2&gt;
&lt;h3 id=&quot;Oh-let&#39;s-turn-on-GPC&quot; tabindex=&quot;-1&quot;&gt;Oh let&#39;s turn on GPC&lt;/h3&gt;
&lt;p&gt;Oh, I&#39;m not doing any personalized tracking to turn off, but I might as well register my support for &lt;a href=&quot;https://globalprivacycontrol.org/&quot; target=&quot;_blank&quot;&gt;GPC&lt;/a&gt;. It should be easy enough to set up a location for me to store &lt;code&gt;.well-known&lt;/code&gt; data and pass it through. I&#39;ll have an internal folder at &lt;code&gt;src/_well-known&lt;/code&gt; and set up a passthrough copy from there.&lt;/p&gt;
&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// added to .eleventy.js&lt;/span&gt;&lt;br /&gt;eleventyConfig&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addPassthroughCopy&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;src/_well-known&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;.well-known&quot;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then I can just add a &lt;code&gt;gpc.json&lt;/code&gt; file in that folder&lt;/p&gt;
&lt;pre class=&quot;language-json&quot;&gt;&lt;code class=&quot;language-json&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;br /&gt;	&lt;span class=&quot;token property&quot;&gt;&quot;gpc&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;br /&gt;	&lt;span class=&quot;token property&quot;&gt;&quot;lastUpdate&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;2021-07-31&quot;&lt;/span&gt;&lt;br /&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
</content>
  </entry>
</feed>
